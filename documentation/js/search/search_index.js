var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.966,1,1.833]],["body/controllers/AppController.html",[0,1.51,1,2.864,2,1.451,3,0.346,4,0.346,5,0.286,6,2.987,7,0.544,8,1.364,9,4.406,10,1.311,11,0.039,12,0.697,13,3.628,14,1.071,15,0.994,16,0.44,17,0.967,18,2.505,19,2.987,20,0.346,21,0.102,22,2.565,23,3.628,24,1.608,25,3.628,26,0.03,27,0.03]],["title/modules/AppModule.html",[28,1.457,29,1.833]],["body/modules/AppModule.html",[1,2.448,2,1.327,3,0.214,4,0.214,5,0.177,11,0.039,16,0.536,17,0.598,18,2.4,19,1.849,20,0.214,21,0.063,26,0.021,27,0.021,28,1.635,29,3.42,30,0.995,31,1.635,32,1.849,33,1.849,34,1.849,35,2.682,36,2.682,37,2.682,38,2.058,39,1.392,40,1.392,41,2.246,42,2.346,43,2.448,44,2.346,45,2.246,46,2.246,47,2.246,48,2.246,49,2.246,50,2.246,51,1.849,52,1.587,53,1.106,54,1.587,55,1.236,56,1.236,57,0.637,58,2.246,59,1.471,60,2.246,61,2.246,62,3.319,63,1.587,64,2.246,65,3.319,66,1.849,67,2.246,68,2.246,69,2.246,70,0.431,71,2.246,72,2.246,73,2.246,74,2.246,75,2.246,76,3.319,77,2.246,78,2.246,79,2.246,80,2.246,81,2.246,82,1.849,83,2.246,84,1.392,85,2.246,86,1.587]],["title/injectables/AppService.html",[18,1.457,87,1.068]],["body/injectables/AppService.html",[3,0.366,4,0.366,5,0.302,7,0.576,8,1.413,9,4.497,11,0.038,12,0.737,14,1.133,15,1.03,16,0.366,17,1.023,18,2.358,20,0.366,21,0.108,24,1.701,26,0.031,27,0.031,87,1.73,88,2.113,89,3.16,90,3.838,91,3.838,92,3.838]],["title/classes/CreateNameDto.html",[21,0.083,93,1.457]],["body/classes/CreateNameDto.html",[3,0.337,4,0.337,5,0.279,7,0.531,10,1.644,11,0.038,12,0.873,15,1.141,16,0.337,20,0.337,21,0.1,26,0.029,27,0.029,70,0.873,93,2.241,94,1.416,95,4.137,96,2.503,97,1.819,98,1.486,99,3.552,100,3.552,101,3.541,102,2.915,103,3.541,104,3.552,105,3.541,106,1.569,107,3.541]],["title/classes/CreateUsersDto.html",[21,0.083,108,1.457]],["body/classes/CreateUsersDto.html",[3,0.368,4,0.368,5,0.304,7,0.579,10,1.394,11,0.038,12,0.741,15,1.033,16,0.368,20,0.368,21,0.109,26,0.031,27,0.031,57,1.004,70,0.741,94,1.543,97,1.92,104,3.696,106,1.71,108,2.366,109,3.954,110,2.727,111,3.858]],["title/controllers/HealthController.html",[0,0.966,43,1.833]],["body/controllers/HealthController.html",[0,0.89,2,1.089,3,0.259,4,0.259,5,0.215,7,0.408,8,1.126,10,1.59,11,0.039,12,0.845,14,1.299,16,0.363,17,0.725,20,0.259,21,0.077,24,1.95,26,0.025,27,0.025,43,2.364,63,1.924,112,2.241,113,1.924,114,3.139,115,3.925,116,4.767,117,4.767,118,2.723,119,2.723,120,2.723,121,2.723,122,2.723,123,2.723,124,3.813,125,3.813,126,4.767,127,3.813,128,3.813,129,2.723,130,1.924,131,2.955,132,2.723,133,2.723,134,2.723,135,4.4,136,2.723,137,2.723,138,2.723,139,2.723,140,2.723,141,2.723,142,3.813,143,2.723,144,2.723]],["title/entities/Name.html",[57,0.568,145,1.627]],["body/entities/Name.html",[3,0.287,4,0.287,5,0.238,7,0.452,10,1.678,11,0.038,12,0.891,15,1.154,16,0.287,20,0.287,21,0.085,26,0.026,27,0.026,57,0.785,70,0.999,84,1.869,86,2.891,97,1.636,98,1.337,99,3.281,100,3.281,145,1.66,146,2.482,147,1.856,148,3.822,149,3.015,150,4.09,151,4.978,152,4.978,153,4.09,154,4.09,155,2.252,156,3.015,157,3.015,158,4.09,159,3.015,160,3.281,161,1.089,162,3.015,163,2.131]],["title/injectables/NameInsertedListener.html",[37,1.627,87,1.068]],["body/injectables/NameInsertedListener.html",[3,0.298,4,0.298,5,0.247,7,0.47,8,1.239,10,1.131,11,0.039,12,0.806,14,0.925,15,1.018,16,0.4,17,0.834,20,0.298,21,0.088,26,0.027,27,0.027,37,2.31,55,1.724,56,1.724,57,0.601,70,0.806,87,1.516,88,1.724,97,1.678,98,1.023,131,2.934,155,1.724,164,3.896,165,2.578,166,4.732,167,4.196,168,4.196,169,4.196,170,3.131,171,1.252,172,4.196,173,3.131,174,1.941,175,1.941,176,3.454,177,3.131,178,3.131,179,4.196,180,3.131,181,3.131]],["title/controllers/NamesController.html",[0,0.966,182,1.833]],["body/controllers/NamesController.html",[0,0.89,2,1.089,3,0.259,4,0.259,5,0.215,7,0.408,8,1.126,10,1.59,11,0.039,12,0.845,14,1.299,15,0.946,16,0.454,17,0.725,20,0.259,21,0.077,22,1.924,24,1.95,26,0.025,27,0.025,57,0.845,70,0.732,93,2.349,98,1.246,113,1.924,147,1.525,171,1.525,182,2.364,183,2.241,184,2.723,185,3.813,186,3.813,187,4.767,188,2.723,189,3.11,190,2.723,191,2.728,192,1.69,193,2.723,194,3.139,195,2.723,196,2.723,197,2.241,198,2.168,199,2.241,200,1.924,201,1.688,202,1.924,203,2.723,204,2.723,205,2.723,206,2.723,207,2.723,208,2.723]],["title/modules/NamesModule.html",[28,1.457,35,1.627]],["body/modules/NamesModule.html",[2,1.712,3,0.308,4,0.308,5,0.254,11,0.039,16,0.522,17,0.86,20,0.308,21,0.091,26,0.028,27,0.028,28,2.11,30,1.43,31,2.11,35,3.013,38,2.654,39,2.001,40,2.001,42,3.027,44,2.282,52,2.282,53,1.59,54,3.027,55,1.777,56,1.777,57,0.822,182,2.979,198,2.697,199,2.657,200,2.282,209,2.657,210,2.657,211,3.228,212,3.228,213,3.228]],["title/injectables/NamesService.html",[87,1.068,198,1.457]],["body/injectables/NamesService.html",[3,0.243,4,0.243,5,0.201,7,0.383,8,1.075,11,0.039,12,0.889,14,1.254,15,0.913,16,0.467,17,0.68,20,0.243,21,0.072,24,1.882,26,0.024,27,0.024,53,1.257,57,0.978,70,0.815,87,1.316,88,1.405,93,2.282,98,1.388,130,2.574,131,1.582,147,1.02,161,0.922,171,1.698,191,2.632,192,2.257,198,1.794,200,1.804,201,1.582,202,1.804,214,2.101,215,2.998,216,4.631,217,2.551,218,3.274,219,2.551,220,3.642,221,2.551,222,2.551,223,3.642,224,2.551,225,2.551,226,2.101,227,2.551,228,2.551,229,2.551,230,2.551,231,1.804,232,1.582,233,2.551,234,2.551,235,2.551,236,2.551,237,2.551]],["title/classes/RoleAdded1645187268998.html",[21,0.083,238,2.09]],["body/classes/RoleAdded1645187268998.html",[3,0.261,4,0.261,5,0.216,7,0.412,8,1.132,11,0.038,12,0.848,14,1.132,15,0.59,16,0.261,20,0.261,21,0.077,26,0.025,27,0.025,57,1.028,70,0.848,94,1.097,97,1.533,98,1.252,99,2.709,155,1.51,160,1.939,161,0.991,171,1.533,175,1.7,192,2.12,215,2.258,238,3.381,239,3.937,240,2.258,241,2.709,242,3.123,243,3.685,244,3.232,245,2.709,246,2.376,247,2.743,248,2.709,249,3.921,250,2.743,251,2.709,252,2.743,253,2.376,254,3.833,255,2.11,256,1.939,257,2.743,258,2.743]],["title/classes/UpdateNameDto.html",[21,0.083,259,2.09]],["body/classes/UpdateNameDto.html",[3,0.388,4,0.388,5,0.321,11,0.038,16,0.473,20,0.388,21,0.115,26,0.032,27,0.032,93,2.007,94,1.629,96,2.879,106,1.805,202,2.879,259,3.51,260,3.353,261,3.353,262,2.242,263,3.353,264,4.073]],["title/classes/UpdateUsersDto.html",[21,0.083,265,1.627]],["body/classes/UpdateUsersDto.html",[3,0.388,4,0.388,5,0.321,11,0.038,16,0.473,20,0.388,21,0.115,26,0.032,27,0.032,94,1.629,106,1.805,108,2.007,110,2.879,261,3.353,262,2.242,263,3.353,265,2.734,266,3.353,267,2.879,268,4.073]],["title/entities/User.html",[59,1.31,145,1.627]],["body/entities/User.html",[3,0.331,4,0.331,5,0.274,7,0.521,10,1.624,11,0.038,12,0.863,15,0.966,16,0.428,20,0.331,21,0.098,26,0.029,27,0.029,57,0.956,59,1.991,70,0.863,84,2.153,97,1.796,104,3.52,106,1.539,145,1.912,147,1.991,148,3.699,160,3.176,161,1.255,174,2.785,269,2.859,270,3.473,271,3.473,272,3.473,273,3.473,274,3.473]],["title/controllers/UsersController.html",[0,0.966,275,1.833]],["body/controllers/UsersController.html",[0,0.539,2,0.659,3,0.157,4,0.157,5,0.13,7,0.247,8,0.773,10,1.462,11,0.039,12,0.777,14,1.195,15,0.7,16,0.41,17,0.439,20,0.157,21,0.046,22,1.165,24,1.793,26,0.017,27,0.017,57,0.95,59,2.34,70,0.95,86,1.85,98,1.322,102,1.357,106,0.73,108,1.827,113,1.165,147,1.722,171,1.618,174,2.992,189,1.85,191,2.904,192,2.192,194,1.357,197,1.357,201,1.022,231,1.165,232,1.022,265,2.042,267,1.85,275,1.623,276,1.357,277,3.331,278,2.618,279,2.618,280,2.618,281,2.618,282,3.256,283,1.648,284,1.648,285,3.256,286,2.618,287,1.648,288,1.648,289,1.648,290,1.648,291,1.648,292,1.648,293,2.618,294,1.648,295,2.618,296,1.648,297,1.648,298,1.648,299,1.648,300,2.618,301,1.648,302,1.648,303,1.648,304,1.648,305,1.648,306,1.648,307,2.618,308,3.709,309,1.648,310,1.357,311,1.604,312,1.357,313,1.357,314,1.165,315,3.256,316,3.709,317,2.618,318,3.256,319,2.618,320,1.648,321,1.648,322,1.648,323,1.648,324,1.648,325,1.648,326,1.648,327,1.648,328,1.648,329,1.357,330,1.648,331,1.648,332,1.648,333,1.648,334,1.648,335,1.648,336,1.648,337,1.648,338,1.648,339,1.648,340,1.648]],["title/modules/UsersModule.html",[28,1.457,36,1.627]],["body/modules/UsersModule.html",[2,1.712,3,0.308,4,0.308,5,0.254,11,0.039,16,0.522,17,0.86,20,0.308,21,0.091,26,0.028,27,0.028,28,2.11,30,1.43,31,2.11,36,3.013,38,2.654,39,2.001,40,2.001,42,3.027,44,2.282,52,2.282,53,1.59,54,3.027,55,1.777,56,1.777,59,1.898,275,2.979,311,2.697,312,2.657,314,2.282,341,2.657,342,2.657,343,3.228,344,3.228,345,3.228]],["title/injectables/UsersService.html",[87,1.068,311,1.457]],["body/injectables/UsersService.html",[3,0.174,4,0.174,5,0.144,7,0.274,8,0.839,11,0.039,12,0.864,14,1.256,15,0.749,16,0.429,17,0.487,20,0.174,21,0.051,24,1.995,26,0.018,27,0.018,53,0.901,57,0.979,59,1.995,70,0.864,87,1.027,88,1.007,98,1.471,108,1.935,130,2.009,131,1.134,147,1.136,161,0.661,171,1.8,174,3.092,191,2.435,192,2.259,201,1.134,218,2.776,226,1.506,231,2.776,232,1.134,244,3.092,253,1.762,262,1.564,265,2.162,267,2.009,311,1.4,313,1.506,314,1.293,329,1.506,346,1.506,347,2.842,348,2.842,349,2.842,350,2.842,351,1.83,352,1.83,353,2.842,354,2.842,355,1.83,356,2.842,357,1.83,358,2.842,359,1.83,360,2.842,361,1.83,362,1.83,363,2.842,364,1.83,365,1.83,366,2.842,367,1.83,368,1.83,369,1.83,370,2.842,371,1.83,372,1.83,373,2.842,374,1.83,375,2.842,376,1.83,377,1.83,378,1.83]],["title/coverage.html",[379,2.853]],["body/coverage.html",[0,1.528,1,1.616,5,0.205,6,2.146,11,0.038,18,1.284,21,0.148,26,0.024,27,0.024,37,1.435,43,1.616,57,0.5,59,1.155,70,0.5,87,1.69,89,2.146,93,1.284,95,2.146,96,2.613,108,1.284,109,2.146,110,2.613,112,2.146,145,2.035,146,2.146,164,2.146,165,2.146,176,4.847,182,1.616,183,2.146,198,1.284,214,2.146,232,1.616,238,1.842,239,2.146,240,2.146,255,1.435,259,1.842,260,2.146,265,1.435,266,2.146,269,2.146,275,1.616,276,2.146,311,1.284,346,2.146,379,1.842,380,2.146,381,2.606,382,2.606,383,4.297,384,4.937,385,3.697,386,2.146,387,2.606,388,2.146,389,4.937,390,2.146,391,2.146,392,1.842,393,2.146,394,2.146,395,1.842,396,2.606,397,2.606,398,2.606,399,2.606]],["title/dependencies.html",[31,1.752,400,2.468]],["body/dependencies.html",[11,0.04,17,0.768,21,0.081,26,0.026,27,0.026,31,1.421,51,2.374,53,1.421,55,1.587,56,1.587,63,2.038,66,2.374,106,1.278,161,1.042,401,2.884,402,4.537,403,2.884,404,2.884,405,2.884,406,2.884,407,2.884,408,2.884,409,3.968,410,2.884,411,2.884,412,2.884,413,2.884,414,2.884,415,2.884,416,2.884,417,3.968,418,2.884,419,2.884,420,2.884,421,2.884,422,2.884,423,3.968,424,2.884,425,2.884,426,2.884,427,2.884,428,2.884,429,2.884,430,2.884,431,2.884,432,2.884,433,2.884,434,2.884,435,2.884,436,2.884,437,2.884,438,2.884,439,2.884,440,2.884,441,2.884,442,2.884,443,2.884,444,2.884,445,2.884,446,2.374,447,2.884,448,2.884,449,2.884,450,2.884,451,2.374,452,2.884,453,2.884,454,2.884]],["title/miscellaneous/functions.html",[455,2.032,456,2.928]],["body/miscellaneous/functions.html",[7,0.671,11,0.034,26,0.034,27,0.034,386,3.682,388,4.59,455,3.682,456,3.682,457,4.472]],["title/index.html",[7,0.37,458,2.032,459,2.032]],["body/index.html",[0,0.607,11,0.019,26,0.019,27,0.019,30,0.823,70,0.357,82,1.529,114,2.367,115,1.529,161,1.271,189,1.313,218,2.486,246,1.151,255,1.023,310,2.367,379,1.313,380,2.896,446,1.529,451,1.529,458,2.896,459,2.367,460,2.875,461,2.875,462,2.875,463,2.875,464,3.96,465,3.96,466,2.875,467,3.517,468,1.858,469,2.875,470,2.875,471,3.517,472,2.875,473,3.517,474,3.96,475,3.517,476,1.858,477,1.858,478,3.517,479,2.875,480,1.858,481,1.858,482,1.858,483,2.875,484,1.858,485,1.858,486,1.858,487,1.858,488,1.858,489,2.875,490,1.858,491,1.858,492,1.858,493,2.875,494,2.875,495,1.858,496,1.858,497,2.875,498,1.858,499,1.858,500,1.858,501,1.858,502,1.858,503,1.858,504,1.858,505,2.875,506,1.858,507,1.858,508,1.858,509,1.858,510,1.858,511,2.875,512,1.858,513,1.858,514,1.858,515,1.858,516,3.517,517,1.858,518,2.875,519,2.875,520,1.858,521,1.858,522,1.858,523,1.858,524,1.858,525,3.517,526,2.875,527,1.858,528,1.858,529,1.858,530,1.858,531,1.858,532,1.858,533,1.858,534,1.858,535,1.858,536,1.858,537,1.858,538,1.858,539,1.858,540,2.875,541,1.858,542,1.858,543,2.875,544,1.858,545,1.858,546,1.858,547,2.875,548,2.875,549,2.875,550,2.875,551,2.875,552,2.875,553,1.858,554,1.858,555,1.858,556,2.875,557,1.858,558,1.858,559,1.858,560,1.858,561,2.875,562,1.858,563,1.858,564,4.283,565,1.858,566,2.875,567,2.875,568,1.858,569,1.858,570,1.858,571,1.858,572,1.858,573,1.858,574,1.858,575,1.858,576,1.858,577,1.858,578,1.858,579,1.858,580,1.858,581,1.858,582,1.858,583,1.858,584,1.858,585,3.96,586,1.858,587,1.858,588,1.858,589,1.858,590,1.858,591,1.858,592,1.858,593,1.858,594,1.858,595,1.858,596,1.858,597,1.858,598,1.858,599,1.858,600,1.858,601,1.858,602,1.858,603,1.858,604,1.858,605,1.858,606,1.858,607,1.858]],["title/classes/init1644393371912.html",[21,0.083,392,2.09]],["body/classes/init1644393371912.html",[3,0.253,4,0.253,5,0.209,7,0.398,8,1.106,11,0.038,12,0.833,14,1.106,15,0.571,16,0.253,20,0.253,21,0.075,26,0.024,27,0.024,57,1.018,70,0.833,94,1.061,97,1.497,98,1.224,100,1.876,147,1.497,155,1.461,161,0.959,163,2.647,171,1.497,175,1.645,192,2.089,241,2.647,242,3.067,243,3.646,244,3.198,245,2.647,246,2.321,248,2.647,249,3.891,251,2.647,253,2.321,255,2.061,256,1.876,262,1.461,390,3.88,391,2.184,392,3.332,608,2.653,609,2.653,610,2.653,611,2.184,612,2.184,613,2.653,614,2.184,615,2.653,616,2.184,617,2.184,618,2.184]],["title/modules.html",[30,1.789]],["body/modules.html",[11,0.033,26,0.033,27,0.033,29,2.643,30,1.889,35,2.347,36,2.347,619,5.464,620,5.464,621,5.464,622,5.464]],["title/overview.html",[623,3.323]],["body/overview.html",[2,1.344,11,0.037,18,2.415,26,0.028,27,0.028,29,3.619,30,1.49,31,2.167,32,2.767,33,2.767,34,2.767,35,2.971,36,2.971,37,2.698,38,2.726,39,2.084,40,2.084,84,2.084,88,1.85,94,1.344,198,2.415,209,2.767,210,2.767,311,2.415,341,2.767,342,2.767,623,2.767,624,3.361,625,4.398,626,3.361,627,3.361]],["title/classes/userdata1644569328662.html",[21,0.083,395,2.09]],["body/classes/userdata1644569328662.html",[3,0.253,4,0.253,5,0.209,7,0.398,8,1.106,11,0.038,12,0.833,14,1.106,15,0.571,16,0.253,20,0.253,21,0.075,26,0.024,27,0.024,57,0.99,70,0.833,94,1.061,97,1.497,98,1.224,147,1.497,155,1.461,161,0.959,163,2.647,171,1.497,175,1.645,192,2.089,241,2.647,242,3.067,243,3.646,244,3.198,245,2.647,246,2.321,248,2.647,249,3.891,251,2.647,253,2.321,255,2.061,256,1.876,262,1.461,277,3.083,393,3.88,394,2.184,395,3.332,611,2.184,612,2.184,614,2.184,616,2.184,617,2.184,618,2.184,628,2.653,629,2.653,630,2.653,631,2.653,632,2.653]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["0",{"_index":176,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["0.0.5",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["0.0.7",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["0.27.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["0.27.3",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":153,"title":{},"body":{"entities/Name.html":{}}}],["1024",{"_index":142,"title":{},"body":{"controllers/HealthController.html":{}}}],["12",{"_index":158,"title":{},"body":{"entities/Name.html":{}}}],["14.3.2",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":141,"title":{},"body":{"controllers/HealthController.html":{}}}],["2",{"_index":626,"title":{},"body":{"overview.html":{}}}],["3",{"_index":624,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":625,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":627,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":588,"title":{},"body":{"index.html":{}}}],["add",{"_index":215,"title":{},"body":{"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{}}}],["add(@body",{"_index":230,"title":{},"body":{"injectables/NamesService.html":{}}}],["add(body",{"_index":221,"title":{},"body":{"injectables/NamesService.html":{}}}],["addname",{"_index":185,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(@body",{"_index":207,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(body",{"_index":188,"title":{},"body":{"controllers/NamesController.html":{}}}],["addons",{"_index":598,"title":{},"body":{"index.html":{}}}],["anoop",{"_index":606,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":465,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":104,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/User.html":{}}}],["apiproperty()@column",{"_index":272,"title":{},"body":{"entities/User.html":{}}}],["apiproperty({required",{"_index":101,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["apiproperty({required:false",{"_index":107,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["apiquery",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('delete",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('get",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('post",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('update",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":602,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appdoc",{"_index":553,"title":{},"body":{"index.html":{}}}],["application",{"_index":494,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":244,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["audit",{"_index":578,"title":{},"body":{"index.html":{}}}],["author",{"_index":605,"title":{},"body":{"index.html":{}}}],["await",{"_index":253,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["aws\\azure\\heroku",{"_index":591,"title":{},"body":{"index.html":{}}}],["based",{"_index":569,"title":{},"body":{"index.html":{}}}],["body",{"_index":191,"title":{},"body":{"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["body.name",{"_index":373,"title":{},"body":{"injectables/UsersService.html":{}}}],["body.role",{"_index":236,"title":{},"body":{"injectables/NamesService.html":{}}}],["body.text",{"_index":234,"title":{},"body":{"injectables/NamesService.html":{}}}],["boot",{"_index":462,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":622,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":619,"title":{},"body":{"modules.html":{}}}],["build",{"_index":537,"title":{},"body":{"index.html":{}}}],["built",{"_index":471,"title":{},"body":{"index.html":{}}}],["came",{"_index":181,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["catch",{"_index":369,"title":{},"body":{"injectables/UsersService.html":{}}}],["cd",{"_index":590,"title":{},"body":{"index.html":{}}}],["chalk",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["character",{"_index":256,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["cheatsheet",{"_index":597,"title":{},"body":{"index.html":{}}}],["check",{"_index":115,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["checkdb",{"_index":116,"title":{},"body":{"controllers/HealthController.html":{}}}],["checker",{"_index":599,"title":{},"body":{"index.html":{}}}],["checking",{"_index":580,"title":{},"body":{"index.html":{}}}],["checkmem",{"_index":117,"title":{},"body":{"controllers/HealthController.html":{}}}],["ci",{"_index":574,"title":{},"body":{"index.html":{}}}],["ci.yml",{"_index":573,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["clone",{"_index":521,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_namesmodule",{"_index":209,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_namesmodule_providers",{"_index":210,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":341,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":342,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":460,"title":{},"body":{"index.html":{}}}],["color",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["column",{"_index":160,"title":{},"body":{"entities/Name.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{}}}],["column({type",{"_index":150,"title":{},"body":{"entities/Name.html":{}}}],["commit",{"_index":561,"title":{},"body":{"index.html":{}}}],["complete",{"_index":461,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":547,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":549,"title":{},"body":{"index.html":{}}}],["compose",{"_index":536,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('name",{"_index":180,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["const",{"_index":231,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraint",{"_index":614,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"controllers/HealthController.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(namesrepository",{"_index":217,"title":{},"body":{"injectables/NamesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["contents",{"_index":468,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('health",{"_index":129,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('names",{"_index":203,"title":{},"body":{"controllers/NamesController.html":{}}}],["controller('users",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copy",{"_index":527,"title":{},"body":{"index.html":{}}}],["correct",{"_index":532,"title":{},"body":{"index.html":{}}}],["count",{"_index":166,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["coverage",{"_index":379,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":262,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["create(body",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["createnamedto",{"_index":93,"title":{"classes/CreateNameDto.html":{}},"body":{"classes/CreateNameDto.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["createusers",{"_index":278,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(body",{"_index":283,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusersdto",{"_index":108,"title":{"classes/CreateUsersDto.html":{}},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["current",{"_index":555,"title":{},"body":{"index.html":{}}}],["data",{"_index":581,"title":{},"body":{"index.html":{}}}],["database",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db",{"_index":133,"title":{},"body":{"controllers/HealthController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":155,"title":{},"body":{"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["delete",{"_index":310,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["delete(':id",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apitags('delete",{"_index":289,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteusers",{"_index":279,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(@param('id",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(id",{"_index":288,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":513,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":496,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":519,"title":{},"body":{"index.html":{}}}],["description",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{}}}],["desktop",{"_index":517,"title":{},"body":{"index.html":{}}}],["details",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["details'})@apinotfoundresponse",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{}}}],["detection",{"_index":584,"title":{},"body":{"index.html":{}}}],["develpoment",{"_index":495,"title":{},"body":{"index.html":{}}}],["docker",{"_index":516,"title":{},"body":{"index.html":{}}}],["docs",{"_index":137,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":380,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":245,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["down(queryrunner",{"_index":248,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["drop",{"_index":258,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["dto/create",{"_index":201,"title":{},"body":{"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["emitter",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["entities",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"entities/Name.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/name.entity",{"_index":200,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{}}}],["entities/user.entity",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":145,"title":{"entities/Name.html":{},"entities/User.html":{}},"body":{"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('name",{"_index":162,"title":{},"body":{"entities/Name.html":{}}}],["entity('users",{"_index":274,"title":{},"body":{"entities/User.html":{}}}],["env",{"_index":529,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":528,"title":{},"body":{"index.html":{}}}],["err",{"_index":370,"title":{},"body":{"injectables/UsersService.html":{}}}],["event",{"_index":172,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["eventemittermodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["eventemittermodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["express",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":263,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["extentia/code",{"_index":523,"title":{},"body":{"index.html":{}}}],["false",{"_index":102,"title":{},"body":{"classes/CreateNameDto.html":{},"controllers/UsersController.html":{}}}],["false})@apiokresponse({type",{"_index":294,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["files",{"_index":535,"title":{},"body":{"index.html":{}}}],["findall",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(name",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(userid",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["flag",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":484,"title":{},"body":{"index.html":{}}}],["framework",{"_index":510,"title":{},"body":{"index.html":{}}}],["fun",{"_index":488,"title":{},"body":{"index.html":{}}}],["function",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":456,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":499,"title":{},"body":{"index.html":{}}}],["game",{"_index":557,"title":{},"body":{"index.html":{}}}],["get('/db",{"_index":143,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/db')@healthcheck",{"_index":120,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory",{"_index":139,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory')@healthcheck",{"_index":122,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id",{"_index":194,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apitags('get",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apitags('users')@apiquery({name",{"_index":292,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":118,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(id",{"_index":223,"title":{},"body":{"injectables/NamesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getname",{"_index":186,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(@param('id",{"_index":205,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(id",{"_index":193,"title":{},"body":{"controllers/NamesController.html":{}}}],["getting",{"_index":458,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusers",{"_index":280,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@query('name",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(name",{"_index":291,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid",{"_index":281,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(@param('id",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(id",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":520,"title":{},"body":{"index.html":{}}}],["github",{"_index":571,"title":{},"body":{"index.html":{}}}],["goal",{"_index":490,"title":{},"body":{"index.html":{}}}],["good",{"_index":463,"title":{},"body":{"index.html":{}}}],["handle",{"_index":167,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["handle(event",{"_index":168,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["having",{"_index":487,"title":{},"body":{"index.html":{}}}],["health",{"_index":114,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["health/health.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":126,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":124,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":43,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["heapmemory",{"_index":545,"title":{},"body":{"index.html":{}}}],["hello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["hook",{"_index":562,"title":{},"body":{"index.html":{}}}],["host",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":132,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://127.0.0.1:8080",{"_index":554,"title":{},"body":{"index.html":{}}}],["http://localhost:3002/health",{"_index":544,"title":{},"body":{"index.html":{}}}],["http://localhost:3002/health/db",{"_index":542,"title":{},"body":{"index.html":{}}}],["http://localhost:3002/health/memory",{"_index":546,"title":{},"body":{"index.html":{}}}],["httphealthindicator",{"_index":125,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["https://compodoc.app",{"_index":603,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":138,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com/recipes/terminus",{"_index":601,"title":{},"body":{"index.html":{}}}],["https://github.com/ajinabraham/njsscan#github",{"_index":587,"title":{},"body":{"index.html":{}}}],["https://github.com/anoopk",{"_index":522,"title":{},"body":{"index.html":{}}}],["id",{"_index":147,"title":{},"body":{"entities/Name.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["identifier",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":241,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["important",{"_index":514,"title":{},"body":{"index.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":559,"title":{},"body":{"index.html":{}}}],["includes",{"_index":575,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["information",{"_index":533,"title":{},"body":{"index.html":{}}}],["init.ts",{"_index":391,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["init.ts:12",{"_index":609,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:4",{"_index":608,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:6",{"_index":610,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init1644393371912",{"_index":392,"title":{"classes/init1644393371912.html":{}},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":446,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["injectrepository",{"_index":226,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(name",{"_index":227,"title":{},"body":{"injectables/NamesService.html":{}}}],["injectrepository(user",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["insecure",{"_index":582,"title":{},"body":{"index.html":{}}}],["inserted.listener",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["inserted.listener.ts",{"_index":165,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["inserted.listener.ts:6",{"_index":177,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["inserted.listener.ts:8",{"_index":170,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["install",{"_index":526,"title":{},"body":{"index.html":{}}}],["installation",{"_index":473,"title":{},"body":{"index.html":{}}}],["instrumentations",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["integration",{"_index":594,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":295,"title":{},"body":{"controllers/UsersController.html":{}}}],["javascript",{"_index":481,"title":{},"body":{"index.html":{}}}],["keep",{"_index":502,"title":{},"body":{"index.html":{}}}],["key",{"_index":617,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["kumar",{"_index":607,"title":{},"body":{"index.html":{}}}],["language",{"_index":512,"title":{},"body":{"index.html":{}}}],["length",{"_index":152,"title":{},"body":{"entities/Name.html":{}}}],["linter",{"_index":576,"title":{},"body":{"index.html":{}}}],["linter/new",{"_index":563,"title":{},"body":{"index.html":{}}}],["list",{"_index":216,"title":{},"body":{"injectables/NamesService.html":{}}}],["listeners/name",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["listnames",{"_index":187,"title":{},"body":{"controllers/NamesController.html":{}}}],["local",{"_index":518,"title":{},"body":{"index.html":{}}}],["localhost:3000",{"_index":539,"title":{},"body":{"index.html":{}}}],["localhost:3000/api",{"_index":541,"title":{},"body":{"index.html":{}}}],["localhost:3000/names",{"_index":540,"title":{},"body":{"index.html":{}}}],["main",{"_index":489,"title":{},"body":{"index.html":{}}}],["maintainence",{"_index":500,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["meant",{"_index":501,"title":{},"body":{"index.html":{}}}],["memhealth",{"_index":134,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":128,"title":{},"body":{"controllers/HealthController.html":{}}}],["metadata",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["migration:run",{"_index":538,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":242,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["migrations",{"_index":556,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":455,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modern",{"_index":480,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["motivation",{"_index":470,"title":{},"body":{"index.html":{}}}],["much",{"_index":508,"title":{},"body":{"index.html":{}}}],["n",{"_index":505,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{"entities/Name.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["name.dto",{"_index":202,"title":{},"body":{"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{}}}],["name.dto.ts",{"_index":96,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:4",{"_index":105,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["name.dto.ts:7",{"_index":103,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["name.role",{"_index":235,"title":{},"body":{"injectables/NamesService.html":{}}}],["name.text",{"_index":233,"title":{},"body":{"injectables/NamesService.html":{}}}],["nameinsertedlistener",{"_index":37,"title":{"injectables/NameInsertedListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"coverage.html":{},"overview.html":{}}}],["names",{"_index":184,"title":{},"body":{"controllers/NamesController.html":{}}}],["names.controller",{"_index":212,"title":{},"body":{"modules/NamesModule.html":{}}}],["names.service",{"_index":199,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{}}}],["names/entities/name.entity",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["names/names.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["namescontroller",{"_index":182,"title":{"controllers/NamesController.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"coverage.html":{}}}],["namesmodule",{"_index":35,"title":{"modules/NamesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules.html":{},"overview.html":{}}}],["namesrepository",{"_index":220,"title":{},"body":{"injectables/NamesService.html":{}}}],["namesservice",{"_index":198,"title":{"injectables/NamesService.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"coverage.html":{},"overview.html":{}}}],["narrow",{"_index":506,"title":{},"body":{"index.html":{}}}],["need",{"_index":498,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":478,"title":{},"body":{"index.html":{}}}],["nestjs.git",{"_index":524,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":106,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":232,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newusers",{"_index":371,"title":{},"body":{"injectables/UsersService.html":{}}}],["newusers.name",{"_index":372,"title":{},"body":{"injectables/UsersService.html":{}}}],["njsscan",{"_index":586,"title":{},"body":{"index.html":{}}}],["node",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":525,"title":{},"body":{"index.html":{}}}],["npx",{"_index":548,"title":{},"body":{"index.html":{}}}],["null",{"_index":163,"title":{},"body":{"entities/Name.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["nullable",{"_index":154,"title":{},"body":{"entities/Name.html":{}}}],["number",{"_index":174,"title":{},"body":{"injectables/NameInsertedListener.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obervability",{"_index":592,"title":{},"body":{"index.html":{}}}],["onevent",{"_index":178,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["onevent('name.inserted",{"_index":169,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["open",{"_index":568,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":593,"title":{},"body":{"index.html":{}}}],["opentelemetry/api",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/auto",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/exporter",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":98,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["ormconfig.example.json",{"_index":530,"title":{},"body":{"index.html":{}}}],["ormconfig.json",{"_index":531,"title":{},"body":{"index.html":{}}}],["otlp",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":589,"title":{},"body":{"index.html":{}}}],["overview",{"_index":623,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":596,"title":{},"body":{"index.html":{}}}],["p",{"_index":550,"title":{},"body":{"index.html":{}}}],["package",{"_index":400,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":197,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":171,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["parseint",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":261,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["partialtype(createnamedto",{"_index":264,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["partialtype(createusersdto",{"_index":268,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["password",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["pattern",{"_index":583,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":497,"title":{},"body":{"index.html":{}}}],["penetration",{"_index":595,"title":{},"body":{"index.html":{}}}],["pg",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["pk_86c85ab0235bbe92757ce7a8f57",{"_index":615,"title":{},"body":{"classes/init1644393371912.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":632,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":189,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post()@apitags('post",{"_index":284,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["powered",{"_index":482,"title":{},"body":{"index.html":{}}}],["practices",{"_index":464,"title":{},"body":{"index.html":{}}}],["pre",{"_index":560,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":113,"title":{},"body":{"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":472,"title":{},"body":{"index.html":{}}}],["primary",{"_index":616,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["primarygeneratedcolumn",{"_index":148,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty",{"_index":270,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":131,"title":{},"body":{"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["process.env.postgres_database",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_port",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["programmers",{"_index":503,"title":{},"body":{"index.html":{}}}],["project",{"_index":469,"title":{},"body":{"index.html":{}}}],["promise",{"_index":192,"title":{},"body":{"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["properties",{"_index":97,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["proto",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["provide",{"_index":491,"title":{},"body":{"index.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":243,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["put",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id')@apitags('update",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryrunner",{"_index":249,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query",{"_index":611,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query(`alter",{"_index":254,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["queryrunner.query(`drop",{"_index":618,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["rep",{"_index":485,"title":{},"body":{"index.html":{}}}],["repository",{"_index":218,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["required",{"_index":293,"title":{},"body":{"controllers/UsersController.html":{}}}],["requires",{"_index":515,"title":{},"body":{"index.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["role",{"_index":99,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"classes/RoleAdded1645187268998.html":{}}}],["roleadded.ts",{"_index":240,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"coverage.html":{}}}],["roleadded.ts:10",{"_index":250,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["roleadded.ts:4",{"_index":247,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["roleadded.ts:6",{"_index":252,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["roleadded1645187268998",{"_index":238,"title":{"classes/RoleAdded1645187268998.html":{}},"body":{"classes/RoleAdded1645187268998.html":{},"coverage.html":{}}}],["run",{"_index":474,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":552,"title":{},"body":{"index.html":{}}}],["seed",{"_index":492,"title":{},"body":{"index.html":{}}}],["serial",{"_index":612,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["servers",{"_index":466,"title":{},"body":{"index.html":{}}}],["service",{"_index":543,"title":{},"body":{"index.html":{}}}],["setup",{"_index":570,"title":{},"body":{"index.html":{}}}],["sherlock",{"_index":558,"title":{},"body":{"index.html":{}}}],["skip",{"_index":565,"title":{},"body":{"index.html":{}}}],["snyk",{"_index":577,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["sql",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["src/.../main.ts",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["src/health/health.controller.ts",{"_index":112,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:21",{"_index":119,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:28",{"_index":123,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:35",{"_index":121,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/listeners/name",{"_index":164,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/1644393371912",{"_index":390,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["src/migration/1644569328662",{"_index":393,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["src/migration/1645187268998",{"_index":239,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"coverage.html":{}}}],["src/names/dto/create",{"_index":95,"title":{},"body":{"classes/CreateNameDto.html":{},"coverage.html":{}}}],["src/names/dto/update",{"_index":260,"title":{},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts",{"_index":146,"title":{},"body":{"entities/Name.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts:10",{"_index":159,"title":{},"body":{"entities/Name.html":{}}}],["src/names/entities/name.entity.ts:13",{"_index":157,"title":{},"body":{"entities/Name.html":{}}}],["src/names/entities/name.entity.ts:7",{"_index":149,"title":{},"body":{"entities/Name.html":{}}}],["src/names/names.controller.ts",{"_index":183,"title":{},"body":{"controllers/NamesController.html":{},"coverage.html":{}}}],["src/names/names.controller.ts:10",{"_index":196,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:15",{"_index":195,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:20",{"_index":190,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.module.ts",{"_index":211,"title":{},"body":{"modules/NamesModule.html":{}}}],["src/names/names.service.ts",{"_index":214,"title":{},"body":{"injectables/NamesService.html":{},"coverage.html":{}}}],["src/names/names.service.ts:13",{"_index":225,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:17",{"_index":224,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:21",{"_index":222,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:8",{"_index":219,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/users/dto/create",{"_index":109,"title":{},"body":{"classes/CreateUsersDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":266,"title":{},"body":{"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":269,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":273,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":271,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":276,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:34",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":287,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":290,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":343,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":486,"title":{},"body":{"index.html":{}}}],["started",{"_index":459,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":476,"title":{},"body":{"index.html":{}}}],["straight",{"_index":504,"title":{},"body":{"index.html":{}}}],["strict",{"_index":579,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["styles",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":620,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["svg",{"_index":621,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":451,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":255,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["talk",{"_index":604,"title":{},"body":{"index.html":{}}}],["terminus",{"_index":600,"title":{},"body":{"index.html":{}}}],["terminusmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":564,"title":{},"body":{"index.html":{}}}],["text",{"_index":100,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"classes/init1644393371912.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.count",{"_index":179,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["this.db.pingcheck('database",{"_index":144,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.findbyid(id",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":135,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('nestjs",{"_index":136,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memhealth.checkheap('memory",{"_index":140,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.namesrepository.find",{"_index":228,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.findone(id",{"_index":229,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.save(name",{"_index":237,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesservice.add(body",{"_index":208,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.get(id",{"_index":206,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.list",{"_index":204,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.usersrepository.find",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneorfail(userid",{"_index":368,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newusers",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(body",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(name",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":477,"title":{},"body":{"index.html":{}}}],["trace",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["transformer",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"entities/Name.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["tsconfig.json",{"_index":551,"title":{},"body":{"index.html":{}}}],["type",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeorm",{"_index":161,"title":{},"body":{"entities/Name.html":{},"injectables/NamesService.html":{},"classes/RoleAdded1645187268998.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeormhealthindicator",{"_index":127,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([name",{"_index":213,"title":{},"body":{"modules/NamesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":345,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":483,"title":{},"body":{"index.html":{}}}],["ui",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":156,"title":{},"body":{"entities/Name.html":{}}}],["unit",{"_index":567,"title":{},"body":{"index.html":{}}}],["up",{"_index":246,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["up(queryrunner",{"_index":251,"title":{},"body":{"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["update",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatenamedto",{"_index":259,"title":{"classes/UpdateNameDto.html":{}},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["updateusers",{"_index":282,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusers(id",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusersdto",{"_index":265,"title":{"classes/UpdateUsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":479,"title":{},"body":{"index.html":{}}}],["used",{"_index":511,"title":{},"body":{"index.html":{}}}],["user",{"_index":59,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":267,"title":{},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":110,"title":{},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":111,"title":{},"body":{"classes/CreateUsersDto.html":{}}}],["user.name",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.ts",{"_index":394,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userdata.ts:12",{"_index":629,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:4",{"_index":628,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:6",{"_index":630,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata1644569328662",{"_index":395,"title":{"classes/userdata1644569328662.html":{}},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userid",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":277,"title":{},"body":{"controllers/UsersController.html":{},"classes/userdata1644569328662.html":{}}}],["users')@apicreatedresponse({type",{"_index":285,"title":{},"body":{"controllers/UsersController.html":{}}}],["users')@apiokresponse({type",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":344,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":275,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":311,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@apibadrequestresponse",{"_index":286,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":566,"title":{},"body":{"index.html":{}}}],["value",{"_index":175,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/RoleAdded1645187268998.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["varchar",{"_index":151,"title":{},"body":{"entities/Name.html":{}}}],["varying",{"_index":631,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["varying(10",{"_index":257,"title":{},"body":{"classes/RoleAdded1645187268998.html":{}}}],["varying(12",{"_index":613,"title":{},"body":{"classes/init1644393371912.html":{}}}],["via",{"_index":585,"title":{},"body":{"index.html":{}}}],["void",{"_index":173,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["way",{"_index":509,"title":{},"body":{"index.html":{}}}],["web",{"_index":493,"title":{},"body":{"index.html":{}}}],["wired",{"_index":467,"title":{},"body":{"index.html":{}}}],["within",{"_index":534,"title":{},"body":{"index.html":{}}}],["without",{"_index":507,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":572,"title":{},"body":{"index.html":{}}}],["world",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            NameInsertedListener\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { NamesModule } from './names/names.module';\nimport { NameInsertedListener } from './listeners/name-inserted.listener';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { Name } from './names/entities/name.entity';\nimport { User } from './users/entities/user.entity';\nimport { UsersModule } from './users/users.module';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health/health.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [\n    NamesModule,\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n\n      host: process.env.POSTGRES_HOST,\n      port: parseInt(\n        process.env.POSTGRES_PORT ? process.env.POSTGRES_PORT : '3000',\n      ),\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [Name, User],\n      //ssl: true,\n    }),\n    HttpModule,\n    TerminusModule,\n    UsersModule,\n  ],\n  controllers: [AppController, HealthController],\n  providers: [AppService, NameInsertedListener],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNameDto.html":{"url":"classes/CreateNameDto.html","title":"class - CreateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/create-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                role\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/dto/create-name.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/dto/create-name.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateNameDto {\n    @ApiProperty()\n    text: string;\n    \n    @ApiProperty({required:false})\n    role?: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersDto.html":{"url":"classes/CreateUsersDto.html","title":"class - CreateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUsersDto {\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                checkDb\n                            \n                            \n                                checkMem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkDb\n                        \n                    \n                \n            \n            \n                \ncheckDb()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/db')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMem\n                        \n                    \n                \n            \n            \n                \ncheckMem()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/memory')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  TypeOrmHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: TypeOrmHealthIndicator,\n    private memHealth: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n  @Get('/memory')\n  @HealthCheck()\n  checkMem() {\n    return this.health.check([\n      () => this.memHealth.checkHeap('memory', 150 * 1024 * 1024),\n    ]);\n  }\n  @Get('/db')\n  @HealthCheck()\n  checkDb() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Name.html":{"url":"entities/Name.html","title":"entity - Name","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/entities/name.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 10, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('name')\nexport class Name {\n\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column({ type: 'varchar', length: 12 })\n  text!: string;\n\n  @Column({ type: 'varchar', length: 10, nullable: true, default: null  })\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameInsertedListener.html":{"url":"injectables/NameInsertedListener.html","title":"injectable - NameInsertedListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NameInsertedListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listeners/name-inserted.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('name.inserted')\n                \n            \n\n            \n                \n                    Defined in src/listeners/name-inserted.listener.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/listeners/name-inserted.listener.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class NameInsertedListener {\n  private count = 0;\n  @OnEvent('name.inserted')\n  handle(event: string) {\n    this.count++;\n    console.log('Name came in ', this.count, event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NamesController.html":{"url":"controllers/NamesController.html","title":"controller - NamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                names\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addName\n                            \n                            \n                                getName\n                            \n                            \n                                listNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addName\n                        \n                    \n                \n            \n            \n                \naddName(body: CreateNameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateNameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listNames\n                        \n                    \n                \n            \n            \n                \nlistNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { NamesService } from './names.service';\nimport { Name } from './entities/name.entity';\nimport { CreateNameDto } from './dto/create-name.dto';\n\n@Controller('names')\nexport class NamesController {\n  constructor(private namesService: NamesService) {}\n  @Get()\n  listNames() {\n    return this.namesService.list();\n  }\n\n  @Get(':id')\n  getName(@Param('id') id: string) {\n    return this.namesService.get(id);\n  }\n\n  @Post()\n  addName(@Body() body: CreateNameDto): Promise  {\n    return this.namesService.add(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NamesModule.html":{"url":"modules/NamesModule.html","title":"module - NamesModule","body":"\n                   \n\n\n\n\n    Modules\n    NamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\n\nNamesService\n\nNamesService\n\n\n\nNamesModule\n\nNamesModule\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/names/names.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NamesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NamesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NamesService } from './names.service';\nimport { NamesController } from './names.controller';\nimport { Name } from './entities/name.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Name])],\n  controllers: [NamesController],\n  providers: [NamesService, Name, EventEmitterModule],\n})\nexport class NamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NamesService.html":{"url":"injectables/NamesService.html","title":"injectable - NamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/names/names.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(body: CreateNameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateNameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist()\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\nimport { Name } from './entities/name.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateNameDto } from './dto/create-name.dto';\n\n@Injectable()\nexport class NamesService {\n  constructor(\n    @InjectRepository(Name) private namesRepository: Repository,\n  ) {}\n\n  list(): Promise {\n    return this.namesRepository.find();\n  }\n\n  get(id: string): Promise {\n    return this.namesRepository.findOne(id);\n  }\n\n  add(@Body() body: CreateNameDto): Promise {\n    const name = new Name();\n    name.text = body.text;\n    name.role = body.role;\n    return this.namesRepository.save(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleAdded1645187268998.html":{"url":"classes/RoleAdded1645187268998.html","title":"class - RoleAdded1645187268998","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleAdded1645187268998\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1645187268998-RoleAdded.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RoleAdded1645187268998'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1645187268998-RoleAdded.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1645187268998-RoleAdded.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1645187268998-RoleAdded.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class RoleAdded1645187268998 implements MigrationInterface {\n    name = 'RoleAdded1645187268998'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"name\" ADD \"role\" character varying(10)`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"name\" DROP COLUMN \"role\"`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNameDto.html":{"url":"classes/UpdateNameDto.html","title":"class - UpdateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/update-name.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNameDto } from './create-name.dto';\n\nexport class UpdateNameDto extends PartialType(CreateNameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsersDto.html":{"url":"classes/UpdateUsersDto.html","title":"class - UpdateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUsersDto } from './create-user.dto';\n\nexport class UpdateUsersDto extends PartialType(CreateUsersDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\nimport { ApiProperty } from '@nestjs/swagger';\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  @Column()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUsers\n                            \n                            \n                                deleteUsers\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersbyId\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUsers\n                        \n                    \n                \n            \n            \n                \ncreateUsers(body: CreateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiTags('Post Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \ndeleteUsers(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags('Delete Users')@ApiCreatedResponse({type: User})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiTags('Users')@ApiQuery({name: 'name', required: false})@ApiOkResponse({type: User, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersbyId\n                        \n                    \n                \n            \n            \n                \ngetUsersbyId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiTags('Get Users')@ApiOkResponse({type: User, description: 'Get user details'})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers(id: number, body: UpdateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiTags('Update Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Query,\n  NotFoundException,\n  ParseIntPipe,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  @ApiTags('Users')\n  @ApiQuery({ name: 'name', required: false })\n  @ApiOkResponse({ type: User, isArray: true })\n  getUsers(@Query('name') name: string): Promise {\n    return this.usersService.findall(name);\n  }\n\n  @Get(':id')\n  @ApiTags('Get Users')\n  @ApiOkResponse({ type: User, description: 'Get user details' })\n  @ApiNotFoundResponse()\n  getUsersbyId(@Param('id', ParseIntPipe) id: number): Promise {\n    const user = this.usersService.findbyid(id);\n    if (!user) {\n      throw new NotFoundException();\n    }\n    return user;\n  }\n  @Post()\n  @ApiTags('Post Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  createUsers(@Body() body: CreateUsersDto): Promise {\n    return this.usersService.create(body);\n  }\n  @Put(':id')\n  @ApiTags('Update Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  updateUsers(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateUsersDto,\n  ): Promise {\n    return this.usersService.update(id, body);\n  }\n  @Delete(':id')\n  @ApiTags('Delete Users')\n  @ApiCreatedResponse({ type: User })\n  deleteUsers(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.usersService.deleteuser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, User, EventEmitterModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                deleteuser\n                            \n                            \n                                findall\n                            \n                            \n                                    Async\n                                findbyid\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteuser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findall\n                        \n                    \n                \n            \n            \n                \nfindall(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findbyid\n                        \n                    \n                \n            \n            \n                \n                    \n                    findbyid(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, body: UpdateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private usersRepository: Repository,\n  ) {}\n\n  findall(name: string): Promise {\n    if (name) {\n      return this.usersRepository.find({\n        where: [{ name: name }],\n      });\n    } else {\n      return this.usersRepository.find();\n    }\n  }\n\n  async findbyid(userID: number): Promise {\n    try {\n      const user = this.usersRepository.findOneOrFail(userID);\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  create(body: CreateUsersDto): Promise {\n    const newUsers = new User();\n    newUsers.name = body.name;\n    return this.usersRepository.save(newUsers);\n  }\n\n  async update(id: number, body: UpdateUsersDto): Promise {\n    const user = await this.findbyid(id);\n    user.name = body.name || '';\n    return this.usersRepository.save(user);\n  }\n  async deleteuser(id: number): Promise {\n    const user = await this.findbyid(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/listeners/name-inserted.listener.ts\n            \n            injectable\n            NameInsertedListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1644393371912-init.ts\n            \n            class\n            init1644393371912\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1644569328662-userdata.ts\n            \n            class\n            userdata1644569328662\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1645187268998-RoleAdded.ts\n            \n            class\n            RoleAdded1645187268998\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/dto/create-name.dto.ts\n            \n            class\n            CreateNameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/names/dto/update-name.dto.ts\n            \n            class\n            UpdateNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/entities/name.entity.ts\n            \n            entity\n            Name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/names.controller.ts\n            \n            controller\n            NamesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/names.service.ts\n            \n            injectable\n            NamesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.0.5\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/event-emitter : ^1.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/terminus : ^8.0.4\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @opentelemetry/api : ^1.0.4\n        \n            @opentelemetry/auto-instrumentations-node : ^0.27.3\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.27.0\n        \n            @opentelemetry/sdk-node : ^0.27.0\n        \n            ansi-styles : ^6.1.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.5.1\n        \n            dotenv : ^14.3.2\n        \n            has-flag : ^5.0.1\n        \n            helmet : ^5.0.2\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sql-injection : ^0.0.7\n        \n            supports-color : ^9.2.1\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Code Complete\n\n  \n    A boot repository that has some good practices for API servers wired in.\n    \n  \n\n\n\nTable of Contents\n\nAbout the Project\nMotivation\nBuilt With\n\n\nGetting Started\nPrerequisites\nInstallation\nRun and Test\n\n\nStay in touch\n\nAbout the project\nA boot repository that has some good practices for API servers wired in. Built on nestjs and use modern Javascript powered by \nTypescript. \nTo use, fork into your rep and start having fun.\nMotivation\nMain goal is to provide a seed repository for a nestjs web application that has some develpoment and deployment patterns wired in. Most of these patterns need no further maintainence. They are meant to keep programmers on the 'straight-n-narrow' without getting too much in their way. \nBuilt With\n\nnestjs - The web framework used\nTypescript - Main Language\ntypeorm - Used for dependency Injection\n\nGetting Started\nPrerequisites\nImportant! Requires Docker Desktop for local deployments.\nInstallation\ngit clone https://github.com/anoopk-extentia/code-complete-nestjs.git\nnpm install\nCopy .env.example to .env and ormconfig.example.json to ormconfig.json\nCorrect the information within these files\ndocker-compose up --build\nnpm run typeorm migration:run\nRun and Test\nget localhost:3000\nget localhost:3000/names\npost localhost:3000/names\nAPI Documentation\nget localhost:3000/api\nHealth Check\n[Database] http://localhost:3002/health/db\n[Service] http://localhost:3002/health\n[HeapMemory] http://localhost:3002/health/memory\nApplication Documentation\nnpm install @compodoc\nnpx @compodoc/compodoc -p tsconfig.json -s\n[AppDoc] http://127.0.0.1:8080\nAfter Installation\nDelete the current modules\nDelete all Migrations\nThe game, as Sherlock would say, is on\nPractices Included\nPre-commit hook to run linter/new tests (skip using -n with commit)\nUnit Tests (Controller and Service)\nOpen API (Swagger)\nDocker based setup for local deployments\nGithub Workflow (ci.yml) \nCI Includes (linter, unit tests, test coverage, Snyk audit)\nStrict Type Checking\nData Migrations using TypeOrm\nInsecure code pattern detection via [njsscan] https://github.com/ajinabraham/njsscan#github-action\nPractices Outstanding\nCD - AWS\\Azure\\Heroku\nObervability via OpenTelemetry\nIntegration tests\nPenetration tests\nOWASP Cheatsheet\nAddons\nHealth Checker via [terminus] https://docs.nestjs.com/recipes/terminus\nApp Documentation via [Compodoc] https://compodoc.app/ (npx @compodoc/compodoc -p tsconfig.json -s)\nTalk to me\n\nAuthor - Anoop Kumar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/init1644393371912.html":{"url":"classes/init1644393371912.html","title":"class - init1644393371912","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  init1644393371912\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644393371912-init.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'init1644393371912'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644393371912-init.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class init1644393371912 implements MigrationInterface {\n  name = 'init1644393371912';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"name\" (\"id\" SERIAL NOT NULL, \"text\" character varying(12) NOT NULL, CONSTRAINT \"PK_86c85ab0235bbe92757ce7a8f57\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\nNamesService\n\nNamesService\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userdata1644569328662.html":{"url":"classes/userdata1644569328662.html","title":"class - userdata1644569328662","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userdata1644569328662\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644569328662-userdata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userdata1644569328662'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644569328662-userdata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class userdata1644569328662 implements MigrationInterface {\n  name = 'userdata1644569328662';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
