var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.105,1,1.757]],["body/controllers/AppController.html",[0,1.698,1,2.699,2,1.476,3,0.369,4,0.369,5,0.305,6,2.822,7,0.586,8,1.523,9,4.226,10,1.322,11,0.042,12,0.755,13,3.448,14,1.186,15,0.97,16,0.474,17,0.952,18,2.343,19,2.822,20,0.369,21,0.067,22,2.41,23,3.448,24,1.651,25,3.448,26,0.032,27,0.032]],["title/modules/AppModule.html",[28,1.38,29,1.757]],["body/modules/AppModule.html",[1,2.361,2,1.396,3,0.237,4,0.237,5,0.196,11,0.042,16,0.57,17,0.611,18,2.281,19,1.813,20,0.237,21,0.043,26,0.023,27,0.023,28,1.562,29,3.282,30,1.06,31,1.562,32,1.813,33,1.813,34,1.813,35,2.564,36,2.564,37,2.564,38,1.988,39,1.35,40,1.35,41,2.215,42,2.28,43,2.28,44,2.215,45,2.215,46,2.215,47,2.215,48,2.215,49,2.215,50,1.813,51,1.548,52,1.06,53,1.548,54,1.192,55,1.192,56,0.632,57,2.215,58,1.396,59,2.215,60,2.215,61,2.215,62,2.215,63,2.215,64,0.429,65,2.215,66,2.215,67,2.215,68,2.215,69,2.215,70,3.262,71,2.215,72,2.215,73,2.215,74,2.215,75,2.215,76,2.215,77,2.215,78,1.35,79,2.215,80,1.813]],["title/injectables/AppService.html",[18,1.38,81,0.991]],["body/injectables/AppService.html",[3,0.392,4,0.392,5,0.323,7,0.622,8,1.582,9,4.32,11,0.041,12,0.802,14,1.259,15,1.008,16,0.392,17,1.011,18,2.203,20,0.392,21,0.072,24,1.753,26,0.033,27,0.033,81,1.582,82,1.971,83,2.997,84,3.662,85,3.662,86,3.662]],["title/classes/CreateNameDto.html",[21,0.056,87,1.757]],["body/classes/CreateNameDto.html",[3,0.394,4,0.394,5,0.325,7,0.626,10,1.412,11,0.041,12,0.807,15,1.011,16,0.394,20,0.394,21,0.072,26,0.033,27,0.033,64,0.713,87,2.815,88,1.576,89,3.779,90,2.573,91,1.976,92,3.075,93,3.525,94,3.683,95,1.576]],["title/classes/CreateUsersDto.html",[21,0.056,96,1.38]],["body/classes/CreateUsersDto.html",[3,0.394,4,0.394,5,0.325,7,0.626,10,1.412,11,0.041,12,0.807,15,1.011,16,0.394,20,0.394,21,0.072,26,0.033,27,0.033,56,0.977,64,0.713,88,1.576,91,1.976,93,3.525,95,1.576,96,2.211,97,3.779,98,2.573,99,3.683]],["title/entities/Name.html",[56,0.558,100,1.551]],["body/entities/Name.html",[3,0.35,4,0.35,5,0.289,7,0.556,10,1.642,11,0.041,12,0.938,15,1.109,16,0.35,20,0.35,21,0.064,26,0.031,27,0.031,56,0.829,64,0.924,78,1.996,91,1.833,92,2.909,100,1.762,101,2.68,102,1.83,103,3.906,104,3.274,105,3.274,106,4.283,107,4.283,108,4.283,109,3.274,110,3.505,111,1.256,112,3.274]],["title/injectables/NameInsertedListener.html",[37,1.551,81,0.991]],["body/injectables/NameInsertedListener.html",[3,0.317,4,0.317,5,0.262,7,0.503,8,1.378,10,1.136,11,0.042,12,0.877,14,1.018,15,0.994,16,0.429,17,0.817,20,0.317,21,0.058,26,0.029,27,0.029,37,2.156,54,1.594,55,1.594,56,0.573,64,0.776,81,1.378,82,1.594,91,1.714,113,3.716,114,2.424,115,3.173,116,4.54,117,4.006,118,4.006,119,4.006,120,2.961,121,1.267,122,1.267,123,2.961,124,2.961,125,1.805,126,2.069,127,2.069,128,3.279,129,2.961,130,2.961,131,4.006,132,2.961,133,2.961]],["title/controllers/NamesController.html",[0,1.105,134,1.757]],["body/controllers/NamesController.html",[0,1.007,2,1.124,3,0.281,4,0.281,5,0.232,7,0.446,8,1.268,10,1.634,11,0.042,12,0.933,14,1.466,15,0.933,16,0.456,17,0.725,20,0.281,21,0.051,22,1.835,24,2.041,26,0.026,27,0.026,56,1.025,64,0.714,102,1.414,121,1.578,122,1.578,134,2.248,135,2.15,136,2.15,137,2.626,138,3.688,139,3.688,140,4.622,141,2.626,142,2.978,143,2.626,144,2.626,145,3.018,146,2.626,147,2.626,148,1.835,149,2.15,150,2.041,151,2.15,152,1.835,153,2.626,154,2.626,155,2.626,156,2.626,157,2.626,158,2.626]],["title/modules/NamesModule.html",[28,1.38,35,1.551]],["body/modules/NamesModule.html",[2,1.747,3,0.326,4,0.326,5,0.269,11,0.042,16,0.565,17,0.84,20,0.326,21,0.06,26,0.029,27,0.029,28,1.954,30,1.458,31,1.954,35,2.842,38,2.488,39,1.856,40,1.856,42,2.852,43,2.128,51,2.128,52,1.458,53,2.852,54,1.638,55,1.638,56,0.79,134,2.806,150,2.528,151,2.492,152,2.128,159,2.492,160,2.492,161,3.045,162,3.045,163,3.045]],["title/injectables/NamesService.html",[81,0.991,150,1.38]],["body/injectables/NamesService.html",[3,0.265,4,0.265,5,0.219,7,0.421,8,1.217,11,0.042,12,0.986,14,1.419,15,1.085,16,0.482,17,0.683,20,0.265,21,0.048,24,1.976,26,0.025,27,0.025,52,1.186,56,0.959,64,0.799,81,1.217,82,1.333,92,2.156,102,0.95,111,0.95,115,1.731,121,1.766,122,1.766,150,1.694,152,1.731,164,2.027,165,3.537,166,4.502,167,2.895,168,2.476,169,3.146,170,2.476,171,3.537,172,3.537,173,2.476,174,2.665,175,3.537,176,2.476,177,2.476,178,2.027,179,2.476,180,2.476,181,2.476,182,1.731,183,1.509,184,2.476,185,2.476]],["title/classes/UpdateNameDto.html",[21,0.056,186,2.015]],["body/classes/UpdateNameDto.html",[3,0.418,4,0.418,5,0.345,11,0.041,16,0.512,20,0.418,21,0.076,26,0.034,27,0.034,87,2.379,88,1.671,90,2.728,95,1.671,186,3.346,187,3.195,188,3.195,189,2.101,190,3.904,191,3.195,192,3.904]],["title/classes/UpdateUsersDto.html",[21,0.056,193,1.551]],["body/classes/UpdateUsersDto.html",[3,0.418,4,0.418,5,0.345,11,0.041,16,0.512,20,0.418,21,0.076,26,0.034,27,0.034,88,1.671,95,1.671,96,1.869,98,2.728,188,3.195,189,2.101,191,3.195,193,2.577,194,3.195,195,2.728,196,3.904]],["title/entities/User.html",[58,1.234,100,1.551]],["body/entities/User.html",[3,0.352,4,0.352,5,0.291,7,0.559,10,1.648,11,0.041,12,0.941,15,0.941,16,0.46,20,0.352,21,0.064,26,0.031,27,0.031,56,0.926,58,1.839,64,0.832,78,2.006,91,1.839,93,3.344,95,1.408,100,1.771,102,1.835,103,3.517,110,3.517,111,1.262,125,2.619,197,2.694,198,3.291,199,3.291,200,3.291,201,3.291,202,3.291]],["title/controllers/UsersController.html",[0,1.105,203,1.757]],["body/controllers/UsersController.html",[0,0.579,2,0.646,3,0.162,4,0.162,5,0.133,7,0.257,8,0.835,10,1.465,11,0.042,12,0.837,14,1.314,15,0.667,16,0.437,17,0.417,20,0.162,21,0.03,22,1.055,24,1.83,26,0.017,27,0.017,56,0.915,58,2.169,64,0.915,80,1.987,95,0.646,96,1.67,102,1.565,121,1.635,122,1.635,125,2.806,136,1.236,142,1.697,145,1.236,148,3.118,149,1.236,174,2.543,182,1.055,183,0.92,193,1.877,195,1.697,203,1.48,204,1.236,205,3.127,206,2.428,207,2.428,208,2.428,209,2.428,210,3.045,211,1.51,212,1.51,213,3.045,214,2.428,215,1.51,216,1.51,217,1.51,218,1.51,219,1.51,220,1.51,221,2.428,222,1.51,223,2.428,224,1.51,225,1.51,226,1.51,227,1.51,228,2.428,229,1.51,230,1.51,231,1.51,232,1.51,233,1.51,234,1.51,235,2.428,236,3.488,237,1.51,238,1.51,239,1.458,240,1.236,241,1.236,242,1.236,243,1.055,244,3.045,245,3.488,246,2.428,247,3.045,248,2.428,249,1.51,250,1.51,251,1.51,252,1.51,253,1.51,254,1.51,255,1.51,256,1.51,257,1.51,258,1.51,259,1.236,260,1.51,261,1.51,262,1.51,263,1.51,264,1.51,265,1.51,266,1.51,267,1.51,268,1.51,269,1.51,270,1.51]],["title/modules/UsersModule.html",[28,1.38,36,1.551]],["body/modules/UsersModule.html",[2,1.747,3,0.326,4,0.326,5,0.269,11,0.042,16,0.565,17,0.84,20,0.326,21,0.06,26,0.029,27,0.029,28,1.954,30,1.458,31,1.954,36,2.842,38,2.488,39,1.856,40,1.856,42,2.852,43,2.128,51,2.128,52,1.458,53,2.852,54,1.638,55,1.638,58,1.747,203,2.806,239,2.528,240,2.492,243,2.128,271,2.492,272,2.492,273,3.045,274,3.045,275,3.045]],["title/injectables/UsersService.html",[81,0.991,239,1.38]],["body/injectables/UsersService.html",[3,0.18,4,0.18,5,0.149,7,0.286,8,0.91,11,0.042,12,0.937,14,1.386,15,0.716,16,0.458,17,0.464,20,0.18,21,0.033,24,2.049,26,0.019,27,0.019,52,0.805,56,0.945,58,1.831,64,0.828,81,0.91,82,0.905,96,1.775,102,1.014,111,0.645,115,1.175,121,1.831,122,1.831,125,2.907,148,2.59,167,2.165,169,2.59,174,2.627,178,1.377,182,2.59,183,1.025,189,1.424,193,1.995,195,1.849,239,1.267,241,1.377,242,1.377,243,1.175,259,1.377,276,1.377,277,3.333,278,2.645,279,2.645,280,2.645,281,2.645,282,1.682,283,1.682,284,2.645,285,2.645,286,1.682,287,2.645,288,1.682,289,2.645,290,1.682,291,2.645,292,1.682,293,1.682,294,2.645,295,1.682,296,1.682,297,2.645,298,1.682,299,1.682,300,1.682,301,2.645,302,1.682,303,1.682,304,2.645,305,1.682,306,1.849,307,2.645,308,1.682,309,1.682,310,1.682]],["title/coverage.html",[311,2.749]],["body/coverage.html",[0,1.61,1,1.557,5,0.226,6,2.09,11,0.041,18,1.223,21,0.098,26,0.026,27,0.026,37,1.375,56,0.495,58,1.093,64,0.495,81,1.57,83,2.09,87,1.557,89,2.09,90,2.527,96,1.223,97,2.09,98,2.527,100,1.946,101,2.09,113,2.09,114,2.09,128,4.652,134,1.557,135,2.09,150,1.223,164,2.09,183,1.557,186,1.785,187,2.09,193,1.375,194,2.09,197,2.09,203,1.557,204,2.09,239,1.223,276,2.09,311,1.785,312,2.09,313,2.554,314,2.554,315,4.565,316,2.554,317,2.09,318,2.554,319,2.09,320,4.818,321,2.09,322,2.09,323,1.785,324,4.198,325,2.09,326,2.09,327,1.785,328,2.554,329,2.554,330,2.554,331,2.554,332,1.557]],["title/dependencies.html",[31,1.66,333,2.408]],["body/dependencies.html",[11,0.043,17,0.778,21,0.055,26,0.028,27,0.028,31,1.35,50,2.308,52,1.35,54,1.518,55,1.518,95,1.207,111,1.081,334,4.427,335,2.82,336,2.82,337,2.82,338,2.82,339,2.82,340,2.82,341,3.875,342,2.82,343,2.82,344,2.82,345,2.82,346,2.82,347,2.82,348,3.875,349,2.82,350,2.82,351,2.82,352,2.82,353,2.82,354,3.875,355,2.82,356,2.82,357,2.82,358,2.82,359,2.82,360,2.82,361,2.82,362,2.82,363,2.82,364,2.82,365,2.82,366,2.82,367,2.82,368,2.82,369,2.82,370,2.82,371,2.82,372,2.82,373,2.82,374,2.82,375,2.82,376,2.82,377,2.82,378,2.82,379,2.308,380,2.82,381,2.82,382,2.82]],["title/miscellaneous/functions.html",[383,1.971,384,2.837]],["body/miscellaneous/functions.html",[7,0.734,11,0.037,26,0.037,27,0.037,317,3.534,319,4.426,383,3.534,384,3.534,385,4.318]],["title/index.html",[7,0.409,386,1.971,387,1.971]],["body/index.html",[0,0.813,11,0.023,26,0.023,27,0.023,64,0.411,111,1.211,142,1.482,169,2.208,311,1.482,312,1.736,332,1.293,379,1.736,386,2.586,387,2.586,388,2.121,389,3.159,390,3.159,391,3.159,392,4.183,393,4.183,394,3.159,395,3.159,396,2.121,397,3.159,398,3.159,399,3.775,400,3.159,401,3.159,402,3.775,403,3.775,404,3.159,405,3.159,406,3.159,407,3.159,408,2.121,409,2.121,410,2.121,411,3.159,412,2.121,413,2.121,414,2.121,415,2.121,416,2.121,417,3.159,418,2.121,419,2.121,420,2.121,421,2.121,422,2.121,423,2.121,424,2.121,425,2.121,426,2.121,427,2.121,428,2.121,429,2.121,430,2.121,431,2.121,432,3.159,433,2.121,434,2.121,435,2.121,436,2.121,437,2.121,438,3.775,439,2.121,440,2.121,441,2.121,442,2.121,443,2.121,444,2.121,445,3.159,446,2.121,447,2.121,448,2.121,449,2.121,450,2.121,451,2.121,452,2.121,453,2.121,454,2.121,455,2.121,456,2.121,457,1.482,458,2.121,459,2.121,460,2.121,461,3.159,462,2.121,463,2.121,464,2.121,465,2.121,466,2.121,467,2.121,468,2.121,469,2.121,470,3.159,471,4.183,472,2.121,473,3.159,474,2.121,475,2.121,476,2.121,477,2.121,478,2.121,479,2.121,480,2.121,481,2.121,482,2.121,483,2.121,484,2.121,485,2.121,486,2.121,487,2.121,488,2.121,489,2.121,490,2.121,491,2.121,492,2.121,493,2.121,494,2.121,495,2.121,496,2.121,497,2.121,498,2.121,499,2.121]],["title/classes/init1644393371912.html",[21,0.056,323,2.015]],["body/classes/init1644393371912.html",[3,0.265,4,0.265,5,0.219,7,0.421,8,1.217,11,0.041,12,0.904,14,1.217,15,0.542,16,0.265,20,0.265,21,0.048,26,0.025,27,0.025,56,0.987,64,0.799,88,1.06,91,1.514,92,1.509,102,1.356,111,0.95,121,1.514,122,1.514,126,1.731,127,1.731,174,2.423,189,1.333,277,3.461,306,2.472,321,3.684,322,2.027,323,3.146,332,2.156,457,2.472,500,2.895,501,3.378,502,4.053,503,2.895,504,2.476,505,2.895,506,4.342,507,2.476,508,2.895,509,2.476,510,2.027,511,2.027,512,2.895,513,2.027,514,2.476,515,2.027,516,2.476,517,2.027,518,2.027,519,2.027]],["title/modules.html",[30,1.883]],["body/modules.html",[11,0.035,26,0.035,27,0.035,29,2.499,30,1.963,35,2.207,36,2.207,520,5.291,521,5.291,522,5.291,523,5.291]],["title/overview.html",[524,3.219]],["body/overview.html",[2,1.36,11,0.04,18,2.252,26,0.03,27,0.03,29,3.446,30,1.522,31,2.011,32,2.601,33,2.601,34,2.601,35,2.8,36,2.8,37,2.532,38,2.56,39,1.937,40,1.937,78,1.937,82,1.711,88,1.36,150,2.252,159,2.601,160,2.601,239,2.252,271,2.601,272,2.601,524,2.601,525,4.2,526,3.178,527,3.178,528,3.178]],["title/classes/userdata1644569328662.html",[21,0.056,327,2.015]],["body/classes/userdata1644569328662.html",[3,0.265,4,0.265,5,0.219,7,0.421,8,1.217,11,0.041,12,0.904,14,1.217,15,0.542,16,0.265,20,0.265,21,0.048,26,0.025,27,0.025,56,0.959,64,0.799,88,1.06,91,1.514,102,1.356,111,0.95,121,1.514,122,1.514,126,1.731,127,1.731,174,2.423,189,1.333,205,2.895,277,3.461,306,2.472,325,3.684,326,2.027,327,3.146,332,2.156,457,2.472,500,2.895,501,3.378,502,4.053,503,2.895,505,2.895,506,4.342,508,2.895,510,2.027,511,2.027,512,2.895,513,2.027,515,2.027,517,2.027,518,2.027,519,2.027,529,2.476,530,2.476,531,2.476,532,2.476,533,2.476]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["0",{"_index":128,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["0.1.13",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["0.27.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["0.27.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":108,"title":{},"body":{"entities/Name.html":{}}}],["14.3.2",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":526,"title":{},"body":{"overview.html":{}}}],["3",{"_index":525,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":527,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":528,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":484,"title":{},"body":{"index.html":{}}}],["add",{"_index":165,"title":{},"body":{"injectables/NamesService.html":{}}}],["add(text",{"_index":172,"title":{},"body":{"injectables/NamesService.html":{}}}],["addname",{"_index":138,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(@body",{"_index":157,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(name",{"_index":141,"title":{},"body":{"controllers/NamesController.html":{}}}],["analysis",{"_index":487,"title":{},"body":{"index.html":{}}}],["anoop",{"_index":498,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":393,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":93,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/User.html":{}}}],["apiproperty()@column",{"_index":200,"title":{},"body":{"entities/User.html":{}}}],["apiquery",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('delete",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('get",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('post",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('update",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":479,"title":{},"body":{"index.html":{}}}],["applications",{"_index":424,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":429,"title":{},"body":{"index.html":{}}}],["async",{"_index":277,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["author",{"_index":497,"title":{},"body":{"index.html":{}}}],["await",{"_index":306,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["aws\\azure\\heroku",{"_index":489,"title":{},"body":{"index.html":{}}}],["based",{"_index":465,"title":{},"body":{"index.html":{}}}],["body",{"_index":148,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["body.name",{"_index":304,"title":{},"body":{"injectables/UsersService.html":{}}}],["boot",{"_index":390,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":523,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":520,"title":{},"body":{"modules.html":{}}}],["build",{"_index":458,"title":{},"body":{"index.html":{}}}],["built",{"_index":399,"title":{},"body":{"index.html":{}}}],["came",{"_index":133,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["catch",{"_index":300,"title":{},"body":{"injectables/UsersService.html":{}}}],["cd",{"_index":488,"title":{},"body":{"index.html":{}}}],["chalk",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["character",{"_index":513,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["cheatsheet",{"_index":496,"title":{},"body":{"index.html":{}}}],["checking",{"_index":477,"title":{},"body":{"index.html":{}}}],["ci",{"_index":473,"title":{},"body":{"index.html":{}}}],["ci.yml",{"_index":469,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["classes",{"_index":88,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["clone",{"_index":441,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_namesmodule",{"_index":159,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_namesmodule_providers",{"_index":160,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":271,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":272,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":388,"title":{},"body":{"index.html":{}}}],["color",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["column",{"_index":110,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["column({type",{"_index":105,"title":{},"body":{"entities/Name.html":{}}}],["complete",{"_index":389,"title":{},"body":{"index.html":{}}}],["compose",{"_index":456,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('name",{"_index":132,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["const",{"_index":182,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraint",{"_index":515,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(namesrepository",{"_index":168,"title":{},"body":{"injectables/NamesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":282,"title":{},"body":{"injectables/UsersService.html":{}}}],["contents",{"_index":396,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('names",{"_index":153,"title":{},"body":{"controllers/NamesController.html":{}}}],["controller('users",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copy",{"_index":447,"title":{},"body":{"index.html":{}}}],["correct",{"_index":452,"title":{},"body":{"index.html":{}}}],["count",{"_index":116,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["coverage",{"_index":311,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":189,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["create(body",{"_index":285,"title":{},"body":{"injectables/UsersService.html":{}}}],["createnamedto",{"_index":87,"title":{"classes/CreateNameDto.html":{}},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["createusers",{"_index":206,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(body",{"_index":211,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusersdto",{"_index":96,"title":{"classes/CreateUsersDto.html":{}},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creation",{"_index":421,"title":{},"body":{"index.html":{}}}],["database",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":126,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["delete",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apitags('delete",{"_index":217,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":278,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":287,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteusers",{"_index":207,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(@param('id",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(id",{"_index":216,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":434,"title":{},"body":{"index.html":{}}}],["description",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{}}}],["desktop",{"_index":439,"title":{},"body":{"index.html":{}}}],["details",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{}}}],["details'})@apinotfoundresponse",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{}}}],["docker",{"_index":438,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":312,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":503,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["down(queryrunner",{"_index":505,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["dto/create",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["efortless",{"_index":428,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["entities",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/Name.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/name.entity",{"_index":152,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{}}}],["entities/user.entity",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":100,"title":{"entities/Name.html":{},"entities/User.html":{}},"body":{"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('name",{"_index":112,"title":{},"body":{"entities/Name.html":{}}}],["entity('users",{"_index":202,"title":{},"body":{"entities/User.html":{}}}],["env",{"_index":449,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":448,"title":{},"body":{"index.html":{}}}],["err",{"_index":301,"title":{},"body":{"injectables/UsersService.html":{}}}],["event",{"_index":123,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["eventemittermodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["eventemittermodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["express",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":191,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["extentia/code",{"_index":443,"title":{},"body":{"index.html":{}}}],["false",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{}}}],["false})@apiokresponse({type",{"_index":222,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["files",{"_index":455,"title":{},"body":{"index.html":{}}}],["findall",{"_index":279,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(name",{"_index":289,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":280,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(userid",{"_index":291,"title":{},"body":{"injectables/UsersService.html":{}}}],["flag",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":412,"title":{},"body":{"index.html":{}}}],["framework",{"_index":431,"title":{},"body":{"index.html":{}}}],["free",{"_index":427,"title":{},"body":{"index.html":{}}}],["fun",{"_index":416,"title":{},"body":{"index.html":{}}}],["function",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":384,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":145,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apitags('get",{"_index":226,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apitags('users')@apiquery({name",{"_index":220,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":175,"title":{},"body":{"injectables/NamesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getname",{"_index":139,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(@param('id",{"_index":155,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(id",{"_index":144,"title":{},"body":{"controllers/NamesController.html":{}}}],["getting",{"_index":386,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusers",{"_index":208,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@query('name",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(name",{"_index":219,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid",{"_index":209,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(@param('id",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(id",{"_index":225,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":440,"title":{},"body":{"index.html":{}}}],["github",{"_index":467,"title":{},"body":{"index.html":{}}}],["goal",{"_index":418,"title":{},"body":{"index.html":{}}}],["good",{"_index":391,"title":{},"body":{"index.html":{}}}],["handle",{"_index":117,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["handle(event",{"_index":118,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["having",{"_index":415,"title":{},"body":{"index.html":{}}}],["hello",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/ajinabraham/njsscan#github",{"_index":483,"title":{},"body":{"index.html":{}}}],["https://github.com/anoopk",{"_index":442,"title":{},"body":{"index.html":{}}}],["id",{"_index":102,"title":{},"body":{"entities/Name.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["identifier",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":500,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["important",{"_index":436,"title":{},"body":{"index.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":463,"title":{},"body":{"index.html":{}}}],["includes",{"_index":474,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["information",{"_index":453,"title":{},"body":{"index.html":{}}}],["init.ts",{"_index":322,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["init.ts:12",{"_index":507,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:4",{"_index":504,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:6",{"_index":509,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init1644393371912",{"_index":323,"title":{"classes/init1644393371912.html":{}},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["injectable",{"_index":81,"title":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":435,"title":{},"body":{"index.html":{}}}],["injectrepository",{"_index":178,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(name",{"_index":179,"title":{},"body":{"injectables/NamesService.html":{}}}],["injectrepository(user",{"_index":296,"title":{},"body":{"injectables/UsersService.html":{}}}],["inserted.listener",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["inserted.listener.ts",{"_index":114,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["inserted.listener.ts:6",{"_index":129,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["inserted.listener.ts:8",{"_index":120,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["install",{"_index":446,"title":{},"body":{"index.html":{}}}],["installation",{"_index":401,"title":{},"body":{"index.html":{}}}],["instrumentations",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["integration",{"_index":493,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":223,"title":{},"body":{"controllers/UsersController.html":{}}}],["javascript",{"_index":409,"title":{},"body":{"index.html":{}}}],["key",{"_index":518,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["kumar",{"_index":499,"title":{},"body":{"index.html":{}}}],["language",{"_index":433,"title":{},"body":{"index.html":{}}}],["length",{"_index":107,"title":{},"body":{"entities/Name.html":{}}}],["linter",{"_index":475,"title":{},"body":{"index.html":{}}}],["list",{"_index":166,"title":{},"body":{"injectables/NamesService.html":{}}}],["listeners/name",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["listnames",{"_index":140,"title":{},"body":{"controllers/NamesController.html":{}}}],["localhost:3000",{"_index":460,"title":{},"body":{"index.html":{}}}],["localhost:3000/api",{"_index":462,"title":{},"body":{"index.html":{}}}],["localhost:3000/names",{"_index":461,"title":{},"body":{"index.html":{}}}],["main",{"_index":417,"title":{},"body":{"index.html":{}}}],["making",{"_index":419,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["metadata",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["migration:run",{"_index":459,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":501,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["miscellaneous",{"_index":383,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modern",{"_index":408,"title":{},"body":{"index.html":{}}}],["modulables",{"_index":425,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["motivation",{"_index":398,"title":{},"body":{"index.html":{}}}],["name",{"_index":56,"title":{"entities/Name.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["name.dto",{"_index":190,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["name.dto.ts",{"_index":90,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:4",{"_index":94,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["name.text",{"_index":184,"title":{},"body":{"injectables/NamesService.html":{}}}],["nameinsertedlistener",{"_index":37,"title":{"injectables/NameInsertedListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"coverage.html":{},"overview.html":{}}}],["names",{"_index":137,"title":{},"body":{"controllers/NamesController.html":{}}}],["names.controller",{"_index":162,"title":{},"body":{"modules/NamesModule.html":{}}}],["names.service",{"_index":151,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{}}}],["names/entities/name.entity",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["names/names.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["namescontroller",{"_index":134,"title":{"controllers/NamesController.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"coverage.html":{}}}],["namesmodule",{"_index":35,"title":{"modules/NamesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules.html":{},"overview.html":{}}}],["namesrepository",{"_index":171,"title":{},"body":{"injectables/NamesService.html":{}}}],["namesservice",{"_index":150,"title":{"injectables/NamesService.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"coverage.html":{},"overview.html":{}}}],["nestjs",{"_index":406,"title":{},"body":{"index.html":{}}}],["nestjs.git",{"_index":444,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":183,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newusers",{"_index":302,"title":{},"body":{"injectables/UsersService.html":{}}}],["newusers.name",{"_index":303,"title":{},"body":{"injectables/UsersService.html":{}}}],["njsscan",{"_index":482,"title":{},"body":{"index.html":{}}}],["node",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":445,"title":{},"body":{"index.html":{}}}],["null",{"_index":512,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["number",{"_index":125,"title":{},"body":{"injectables/NameInsertedListener.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obervability",{"_index":490,"title":{},"body":{"index.html":{}}}],["onevent",{"_index":130,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["onevent('name.inserted",{"_index":119,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["open",{"_index":464,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":492,"title":{},"body":{"index.html":{}}}],["opentelemetry/api",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/auto",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/exporter",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":122,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["ormconfig.example.json",{"_index":450,"title":{},"body":{"index.html":{}}}],["ormconfig.json",{"_index":451,"title":{},"body":{"index.html":{}}}],["otlp",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":485,"title":{},"body":{"index.html":{}}}],["overview",{"_index":524,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":495,"title":{},"body":{"index.html":{}}}],["package",{"_index":333,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":149,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":121,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["parseint",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":188,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["partialtype(createnamedto",{"_index":192,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["partialtype(createusersdto",{"_index":196,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["password",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["penetration",{"_index":494,"title":{},"body":{"index.html":{}}}],["pg",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["pk_86c85ab0235bbe92757ce7a8f57",{"_index":516,"title":{},"body":{"classes/init1644393371912.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":533,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["plugables",{"_index":426,"title":{},"body":{"index.html":{}}}],["port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":142,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post()@apitags('post",{"_index":212,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["powered",{"_index":410,"title":{},"body":{"index.html":{}}}],["practices",{"_index":392,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":136,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":400,"title":{},"body":{"index.html":{}}}],["primary",{"_index":517,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["primarygeneratedcolumn",{"_index":103,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty",{"_index":198,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":115,"title":{},"body":{"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["process.env.postgres_database",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_port",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":397,"title":{},"body":{"index.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["properties",{"_index":91,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"entities/User.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["proto",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":502,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["put",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id')@apitags('update",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryrunner",{"_index":506,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query",{"_index":510,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query(`drop",{"_index":519,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["rep",{"_index":413,"title":{},"body":{"index.html":{}}}],["repository",{"_index":169,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["required",{"_index":221,"title":{},"body":{"controllers/UsersController.html":{}}}],["requires",{"_index":437,"title":{},"body":{"index.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["run",{"_index":402,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["security",{"_index":486,"title":{},"body":{"index.html":{}}}],["serial",{"_index":511,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["server",{"_index":422,"title":{},"body":{"index.html":{}}}],["servers",{"_index":394,"title":{},"body":{"index.html":{}}}],["service",{"_index":472,"title":{},"body":{"index.html":{}}}],["setup",{"_index":466,"title":{},"body":{"index.html":{}}}],["side",{"_index":423,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["src/.../main.ts",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["src/listeners/name",{"_index":113,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/1644393371912",{"_index":321,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["src/migration/1644569328662",{"_index":325,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["src/names/dto/create",{"_index":89,"title":{},"body":{"classes/CreateNameDto.html":{},"coverage.html":{}}}],["src/names/dto/update",{"_index":187,"title":{},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts",{"_index":101,"title":{},"body":{"entities/Name.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts:6",{"_index":104,"title":{},"body":{"entities/Name.html":{}}}],["src/names/entities/name.entity.ts:9",{"_index":109,"title":{},"body":{"entities/Name.html":{}}}],["src/names/names.controller.ts",{"_index":135,"title":{},"body":{"controllers/NamesController.html":{},"coverage.html":{}}}],["src/names/names.controller.ts:14",{"_index":146,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:19",{"_index":143,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:9",{"_index":147,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.module.ts",{"_index":161,"title":{},"body":{"modules/NamesModule.html":{}}}],["src/names/names.service.ts",{"_index":164,"title":{},"body":{"injectables/NamesService.html":{},"coverage.html":{}}}],["src/names/names.service.ts:12",{"_index":177,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:16",{"_index":176,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:20",{"_index":173,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:7",{"_index":170,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/users/dto/create",{"_index":97,"title":{},"body":{"classes/CreateUsersDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":194,"title":{},"body":{"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":197,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":201,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":199,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":204,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:34",{"_index":224,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":230,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":215,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":218,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":273,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":276,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":290,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":292,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":286,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":295,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":288,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":283,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":414,"title":{},"body":{"index.html":{}}}],["started",{"_index":387,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":478,"title":{},"body":{"index.html":{}}}],["stay",{"_index":404,"title":{},"body":{"index.html":{}}}],["strict",{"_index":476,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["styles",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":521,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["svg",{"_index":522,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":379,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":332,"title":{},"body":{"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":403,"title":{},"body":{"index.html":{}}}],["testing",{"_index":480,"title":{},"body":{"index.html":{}}}],["tests",{"_index":471,"title":{},"body":{"index.html":{}}}],["text",{"_index":92,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"injectables/NamesService.html":{},"classes/init1644393371912.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.count",{"_index":131,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["this.findbyid(id",{"_index":307,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.namesrepository.find",{"_index":180,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.findone(id",{"_index":181,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.save(name",{"_index":185,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesservice.add(name.text",{"_index":158,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.get(id",{"_index":156,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.list",{"_index":154,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.usersrepository.find",{"_index":297,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneorfail(userid",{"_index":299,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":310,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newusers",{"_index":305,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":309,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(body",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(name",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":405,"title":{},"body":{"index.html":{}}}],["trace",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["transformer",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":298,"title":{},"body":{"injectables/UsersService.html":{}}}],["type",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeorm",{"_index":111,"title":{},"body":{"entities/Name.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeormmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([name",{"_index":163,"title":{},"body":{"modules/NamesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":275,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":411,"title":{},"body":{"index.html":{}}}],["ui",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["uncomplicaded",{"_index":420,"title":{},"body":{"index.html":{}}}],["unit",{"_index":470,"title":{},"body":{"index.html":{}}}],["up",{"_index":457,"title":{},"body":{"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["up(queryrunner",{"_index":508,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["update",{"_index":281,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":294,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatenamedto",{"_index":186,"title":{"classes/UpdateNameDto.html":{}},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["updateusers",{"_index":210,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusers(id",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusersdto",{"_index":193,"title":{"classes/UpdateUsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":407,"title":{},"body":{"index.html":{}}}],["used",{"_index":432,"title":{},"body":{"index.html":{}}}],["user",{"_index":58,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":195,"title":{},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":98,"title":{},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":99,"title":{},"body":{"classes/CreateUsersDto.html":{}}}],["user.name",{"_index":308,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.ts",{"_index":326,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userdata.ts:12",{"_index":530,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:4",{"_index":529,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:6",{"_index":531,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata1644569328662",{"_index":327,"title":{"classes/userdata1644569328662.html":{}},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userid",{"_index":293,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":205,"title":{},"body":{"controllers/UsersController.html":{},"classes/userdata1644569328662.html":{}}}],["users')@apicreatedresponse({type",{"_index":213,"title":{},"body":{"controllers/UsersController.html":{}}}],["users')@apiokresponse({type",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":274,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":203,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":284,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":239,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@apibadrequestresponse",{"_index":214,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":481,"title":{},"body":{"index.html":{}}}],["value",{"_index":127,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["varchar",{"_index":106,"title":{},"body":{"entities/Name.html":{}}}],["varying",{"_index":532,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["varying(12",{"_index":514,"title":{},"body":{"classes/init1644393371912.html":{}}}],["via",{"_index":491,"title":{},"body":{"index.html":{}}}],["void",{"_index":124,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["web",{"_index":430,"title":{},"body":{"index.html":{}}}],["wired",{"_index":395,"title":{},"body":{"index.html":{}}}],["within",{"_index":454,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":468,"title":{},"body":{"index.html":{}}}],["world",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            NameInsertedListener\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { NamesModule } from './names/names.module';\nimport { NameInsertedListener } from './listeners/name-inserted.listener';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { Name } from './names/entities/name.entity';\nimport { User } from './users/entities/user.entity';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    NamesModule,\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n\n      host: process.env.POSTGRES_HOST,\n      port: parseInt(\n        process.env.POSTGRES_PORT ? process.env.POSTGRES_PORT : '3000',\n      ),\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [Name, User],\n      //ssl: true,\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, NameInsertedListener],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNameDto.html":{"url":"classes/CreateNameDto.html","title":"class - CreateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/create-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/dto/create-name.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateNameDto {\n  @ApiProperty()\n  text: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersDto.html":{"url":"classes/CreateUsersDto.html","title":"class - CreateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUsersDto {\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Name.html":{"url":"entities/Name.html","title":"entity - Name","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/entities/name.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('name')\nexport class Name {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column({ type: 'varchar', length: 12 })\n  text!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameInsertedListener.html":{"url":"injectables/NameInsertedListener.html","title":"injectable - NameInsertedListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NameInsertedListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listeners/name-inserted.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('name.inserted')\n                \n            \n\n            \n                \n                    Defined in src/listeners/name-inserted.listener.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/listeners/name-inserted.listener.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class NameInsertedListener {\n  private count = 0;\n  @OnEvent('name.inserted')\n  handle(event: string) {\n    this.count++;\n    console.log('Name came in ', this.count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NamesController.html":{"url":"controllers/NamesController.html","title":"controller - NamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                names\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addName\n                            \n                            \n                                getName\n                            \n                            \n                                listNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addName\n                        \n                    \n                \n            \n            \n                \naddName(name: Name)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Name\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listNames\n                        \n                    \n                \n            \n            \n                \nlistNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { NamesService } from './names.service';\nimport { Name } from './entities/name.entity';\n\n@Controller('names')\nexport class NamesController {\n  constructor(private namesService: NamesService) {}\n  @Get()\n  listNames() {\n    return this.namesService.list();\n  }\n\n  @Get(':id')\n  getName(@Param('id') id: string) {\n    return this.namesService.get(id);\n  }\n\n  @Post()\n  addName(@Body() name: Name) {\n    return this.namesService.add(name.text);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NamesModule.html":{"url":"modules/NamesModule.html","title":"module - NamesModule","body":"\n                   \n\n\n\n\n    Modules\n    NamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\n\nNamesService\n\nNamesService\n\n\n\nNamesModule\n\nNamesModule\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/names/names.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NamesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NamesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NamesService } from './names.service';\nimport { NamesController } from './names.controller';\nimport { Name } from './entities/name.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Name])],\n  controllers: [NamesController],\n  providers: [NamesService, Name, EventEmitterModule],\n})\nexport class NamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NamesService.html":{"url":"injectables/NamesService.html","title":"injectable - NamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/names/names.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist()\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Name } from './entities/name.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class NamesService {\n  constructor(\n    @InjectRepository(Name) private namesRepository: Repository,\n  ) {}\n\n  list(): Promise {\n    return this.namesRepository.find();\n  }\n\n  get(id: string): Promise {\n    return this.namesRepository.findOne(id);\n  }\n\n  add(text: string): Promise {\n    const name = new Name();\n    name.text = text;\n    return this.namesRepository.save(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNameDto.html":{"url":"classes/UpdateNameDto.html","title":"class - UpdateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/update-name.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNameDto } from './create-name.dto';\n\nexport class UpdateNameDto extends PartialType(CreateNameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsersDto.html":{"url":"classes/UpdateUsersDto.html","title":"class - UpdateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUsersDto } from './create-user.dto';\n\nexport class UpdateUsersDto extends PartialType(CreateUsersDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\nimport { ApiProperty } from '@nestjs/swagger';\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  @Column()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUsers\n                            \n                            \n                                deleteUsers\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersbyId\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUsers\n                        \n                    \n                \n            \n            \n                \ncreateUsers(body: CreateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiTags('Post Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \ndeleteUsers(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags('Delete Users')@ApiCreatedResponse({type: User})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiTags('Users')@ApiQuery({name: 'name', required: false})@ApiOkResponse({type: User, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersbyId\n                        \n                    \n                \n            \n            \n                \ngetUsersbyId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiTags('Get Users')@ApiOkResponse({type: User, description: 'Get user details'})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers(id: number, body: UpdateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiTags('Update Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Query,\n  NotFoundException,\n  ParseIntPipe,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  @ApiTags('Users')\n  @ApiQuery({ name: 'name', required: false })\n  @ApiOkResponse({ type: User, isArray: true })\n  getUsers(@Query('name') name: string): Promise {\n    return this.usersService.findall(name);\n  }\n\n  @Get(':id')\n  @ApiTags('Get Users')\n  @ApiOkResponse({ type: User, description: 'Get user details' })\n  @ApiNotFoundResponse()\n  getUsersbyId(@Param('id', ParseIntPipe) id: number): Promise {\n    const user = this.usersService.findbyid(id);\n    if (!user) {\n      throw new NotFoundException();\n    }\n    return user;\n  }\n  @Post()\n  @ApiTags('Post Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  createUsers(@Body() body: CreateUsersDto): Promise {\n    return this.usersService.create(body);\n  }\n  @Put(':id')\n  @ApiTags('Update Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  updateUsers(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateUsersDto,\n  ): Promise {\n    return this.usersService.update(id, body);\n  }\n  @Delete(':id')\n  @ApiTags('Delete Users')\n  @ApiCreatedResponse({ type: User })\n  deleteUsers(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.usersService.deleteuser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, User, EventEmitterModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                deleteuser\n                            \n                            \n                                findall\n                            \n                            \n                                    Async\n                                findbyid\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteuser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findall\n                        \n                    \n                \n            \n            \n                \nfindall(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findbyid\n                        \n                    \n                \n            \n            \n                \n                    \n                    findbyid(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, body: UpdateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private usersRepository: Repository,\n  ) {}\n\n  findall(name: string): Promise {\n    if (name) {\n      return this.usersRepository.find({\n        where: [{ name: name }],\n      });\n    } else {\n      return this.usersRepository.find();\n    }\n  }\n\n  async findbyid(userID: number): Promise {\n    try {\n      const user = this.usersRepository.findOneOrFail(userID);\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  create(body: CreateUsersDto): Promise {\n    const newUsers = new User();\n    newUsers.name = body.name;\n    return this.usersRepository.save(newUsers);\n  }\n\n  async update(id: number, body: UpdateUsersDto): Promise {\n    const user = await this.findbyid(id);\n    user.name = body.name || '';\n    return this.usersRepository.save(user);\n  }\n  async deleteuser(id: number): Promise {\n    const user = await this.findbyid(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/listeners/name-inserted.listener.ts\n            \n            injectable\n            NameInsertedListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1644393371912-init.ts\n            \n            class\n            init1644393371912\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1644569328662-userdata.ts\n            \n            class\n            userdata1644569328662\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/dto/create-name.dto.ts\n            \n            class\n            CreateNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/names/dto/update-name.dto.ts\n            \n            class\n            UpdateNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/entities/name.entity.ts\n            \n            entity\n            Name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/names.controller.ts\n            \n            controller\n            NamesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/names.service.ts\n            \n            injectable\n            NamesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/event-emitter : ^1.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @opentelemetry/api : ^1.0.4\n        \n            @opentelemetry/auto-instrumentations-node : ^0.27.3\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.27.0\n        \n            @opentelemetry/sdk-node : ^0.27.0\n        \n            ansi-styles : ^6.1.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.5.1\n        \n            dotenv : ^14.3.2\n        \n            has-flag : ^5.0.1\n        \n            helmet : ^5.0.2\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            supports-color : ^9.2.1\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Code Complete\n\n  \n    A boot repository that has some good practices for API servers wired in.\n    \n  \n\n\n\nTable of Contents\n\nAbout the Project\nMotivation\nBuilt With\n\n\nGetting Started\nPrerequisites\nInstallation\nRun and Test\n\n\nStay in touch\n\nAbout the project\nA boot repository that has some good practices for API servers wired in. Built on nestjs and use modern Javascript powered by \nTypescript. \nTo use, fork into your rep and start having fun.\nMotivation\nMain goal is making uncomplicaded creation of server-side applications, modulables, plugables, free and efortless \narchitecture.\nBuilt With\n\nnestjs - The web framework used\nTypescript - Main Language\ntypeorm - Used for dependency Injection\n\nGetting Started\nPrerequisites\nImportant! Requires Docker Desktop.\nInstallation\ngit clone https://github.com/anoopk-extentia/code-complete-nestjs.git\nnpm install\nCopy .env.example to .env and ormconfig.example.json to ormconfig.json\nCorrect the information within these files\ndocker-compose up --build\nnpm run typeorm migration:run\nRun and Test\nget localhost:3000\nget localhost:3000/names\npost localhost:3000/names\nAPI Documentation\nget localhost:3000/api\nPractices Included\nOpen API (Swagger)\nDocker based setup\nGithub Workflow (ci.yml) \nUnit Tests (Controller and Service)\nCI Includes (linter, unit tests, test coverage)\nStrict Type Checking\nstatic application testing using [njsscan] https://github.com/ajinabraham/njsscan#github-action\nPractices Outstanding\nCI - Security Analysis\nCD - AWS\\Azure\\Heroku\nObervability via OpenTelemetry\nIntegration tests\nPenetration tests\nOWASP Cheatsheet\nStay in Touch\n\nAuthor - Anoop Kumar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/init1644393371912.html":{"url":"classes/init1644393371912.html","title":"class - init1644393371912","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  init1644393371912\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644393371912-init.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'init1644393371912'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644393371912-init.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class init1644393371912 implements MigrationInterface {\n  name = 'init1644393371912';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"name\" (\"id\" SERIAL NOT NULL, \"text\" character varying(12) NOT NULL, CONSTRAINT \"PK_86c85ab0235bbe92757ce7a8f57\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\nNamesService\n\nNamesService\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userdata1644569328662.html":{"url":"classes/userdata1644569328662.html","title":"class - userdata1644569328662","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userdata1644569328662\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644569328662-userdata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userdata1644569328662'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644569328662-userdata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class userdata1644569328662 implements MigrationInterface {\n  name = 'userdata1644569328662';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
