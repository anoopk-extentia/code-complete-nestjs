var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.105,1,1.757]],["body/controllers/AppController.html",[0,1.702,1,2.706,2,1.481,3,0.37,4,0.37,5,0.306,6,2.832,7,0.588,8,1.527,9,4.231,10,1.327,11,0.042,12,0.758,13,3.461,14,1.19,15,0.972,16,0.475,17,0.955,18,2.347,19,2.832,20,0.37,21,0.068,22,2.418,23,3.461,24,1.657,25,3.461,26,0.032,27,0.032]],["title/modules/AppModule.html",[28,1.38,29,1.757]],["body/modules/AppModule.html",[1,2.37,2,1.403,3,0.239,4,0.239,5,0.197,11,0.042,16,0.57,17,0.616,18,2.287,19,1.825,20,0.239,21,0.044,26,0.024,27,0.024,28,1.57,29,3.286,30,1.068,31,1.57,32,1.825,33,1.825,34,1.825,35,2.571,36,2.571,37,2.571,38,1.999,39,1.359,40,1.359,41,2.23,42,2.292,43,2.292,44,2.23,45,2.23,46,2.23,47,2.23,48,2.23,49,2.23,50,1.825,51,1.559,52,1.068,53,1.559,54,1.2,55,1.2,56,0.635,57,2.23,58,1.403,59,2.23,60,2.23,61,2.23,62,2.23,63,2.23,64,0.432,65,2.23,66,2.23,67,2.23,68,2.23,69,2.23,70,3.279,71,2.23,72,2.23,73,2.23,74,2.23,75,2.23,76,2.23,77,2.23,78,1.359,79,2.23,80,1.825]],["title/injectables/AppService.html",[18,1.38,81,0.991]],["body/injectables/AppService.html",[3,0.393,4,0.393,5,0.324,7,0.624,8,1.585,9,4.325,11,0.041,12,0.804,14,1.263,15,1.01,16,0.393,17,1.014,18,2.207,20,0.393,21,0.072,24,1.759,26,0.033,27,0.033,81,1.585,82,1.977,83,3.006,84,3.673,85,3.673,86,3.673]],["title/classes/CreateNameDto.html",[21,0.056,87,1.757]],["body/classes/CreateNameDto.html",[3,0.395,4,0.395,5,0.326,7,0.628,10,1.416,11,0.041,12,0.809,15,1.013,16,0.395,20,0.395,21,0.072,26,0.033,27,0.033,64,0.715,87,2.82,88,1.581,89,3.786,90,2.581,91,1.98,92,3.079,93,3.53,94,3.693,95,1.581]],["title/classes/CreateUsersDto.html",[21,0.056,96,1.38]],["body/classes/CreateUsersDto.html",[3,0.395,4,0.395,5,0.326,7,0.628,10,1.416,11,0.041,12,0.809,15,1.013,16,0.395,20,0.395,21,0.072,26,0.033,27,0.033,56,0.978,64,0.715,88,1.581,91,1.98,93,3.53,95,1.581,96,2.215,97,3.786,98,2.581,99,3.693]],["title/entities/Name.html",[56,0.558,100,1.551]],["body/entities/Name.html",[3,0.352,4,0.352,5,0.29,7,0.559,10,1.647,11,0.041,12,0.941,15,1.111,16,0.352,20,0.352,21,0.064,26,0.031,27,0.031,56,0.831,64,0.926,78,2.004,91,1.838,92,2.915,100,1.769,101,2.691,102,1.834,103,3.914,104,3.288,105,3.288,106,4.295,107,4.295,108,4.295,109,3.288,110,3.515,111,1.261,112,3.288]],["title/injectables/NameInsertedListener.html",[37,1.551,81,0.991]],["body/injectables/NameInsertedListener.html",[3,0.319,4,0.319,5,0.263,7,0.506,8,1.382,10,1.141,11,0.042,12,0.88,14,1.023,15,0.997,16,0.43,17,0.821,20,0.319,21,0.058,26,0.029,27,0.029,37,2.163,54,1.602,55,1.602,56,0.576,64,0.778,81,1.382,82,1.602,91,1.72,113,3.725,114,2.436,115,3.181,116,4.551,117,4.019,118,4.019,119,4.019,120,2.976,121,1.274,122,1.274,123,2.976,124,2.976,125,1.814,126,2.08,127,2.08,128,3.29,129,2.976,130,2.976,131,4.019,132,2.976,133,2.976]],["title/controllers/NamesController.html",[0,1.105,134,1.757]],["body/controllers/NamesController.html",[0,1.013,2,1.131,3,0.283,4,0.283,5,0.233,7,0.449,8,1.274,10,1.639,11,0.042,12,0.936,14,1.47,15,0.936,16,0.458,17,0.729,20,0.283,21,0.052,22,1.846,24,2.047,26,0.027,27,0.027,56,1.026,64,0.717,102,1.42,121,1.585,122,1.585,134,2.257,135,2.162,136,2.162,137,2.642,138,3.703,139,3.703,140,4.634,141,2.642,142,2.988,143,2.642,144,2.642,145,3.031,146,2.642,147,2.642,148,1.846,149,2.162,150,2.047,151,2.162,152,1.846,153,2.642,154,2.642,155,2.642,156,2.642,157,2.642,158,2.642]],["title/modules/NamesModule.html",[28,1.38,35,1.551]],["body/modules/NamesModule.html",[2,1.752,3,0.327,4,0.327,5,0.27,11,0.042,16,0.566,17,0.844,20,0.327,21,0.06,26,0.029,27,0.029,28,1.96,30,1.465,31,1.96,35,2.846,38,2.496,39,1.864,40,1.864,42,2.861,43,2.138,51,2.138,52,1.465,53,2.861,54,1.646,55,1.646,56,0.793,134,2.813,150,2.532,151,2.503,152,2.138,159,2.503,160,2.503,161,3.059,162,3.059,163,3.059]],["title/injectables/NamesService.html",[81,0.991,150,1.38]],["body/injectables/NamesService.html",[3,0.267,4,0.267,5,0.22,7,0.423,8,1.222,11,0.042,12,0.989,14,1.424,15,1.087,16,0.483,17,0.688,20,0.267,21,0.049,24,1.983,26,0.026,27,0.026,52,1.193,56,0.961,64,0.802,81,1.222,82,1.341,92,2.166,102,0.956,111,0.956,115,1.741,121,1.772,122,1.772,150,1.701,152,1.741,164,2.039,165,3.553,166,4.515,167,2.908,168,2.492,169,3.155,170,2.492,171,3.553,172,3.553,173,2.492,174,2.671,175,3.553,176,2.492,177,2.492,178,2.039,179,2.492,180,2.492,181,2.492,182,1.741,183,1.519,184,2.492,185,2.492]],["title/classes/UpdateNameDto.html",[21,0.056,186,2.015]],["body/classes/UpdateNameDto.html",[3,0.419,4,0.419,5,0.346,11,0.041,16,0.513,20,0.419,21,0.077,26,0.034,27,0.034,87,2.385,88,1.674,90,2.734,95,1.674,186,3.351,187,3.202,188,3.202,189,2.106,190,3.913,191,3.202,192,3.913]],["title/classes/UpdateUsersDto.html",[21,0.056,193,1.551]],["body/classes/UpdateUsersDto.html",[3,0.419,4,0.419,5,0.346,11,0.041,16,0.513,20,0.419,21,0.077,26,0.034,27,0.034,88,1.674,95,1.674,96,1.873,98,2.734,188,3.202,189,2.106,191,3.202,193,2.58,194,3.202,195,2.734,196,3.913]],["title/entities/User.html",[58,1.234,100,1.551]],["body/entities/User.html",[3,0.354,4,0.354,5,0.292,7,0.561,10,1.652,11,0.041,12,0.944,15,0.944,16,0.461,20,0.354,21,0.065,26,0.031,27,0.031,56,0.928,58,1.844,64,0.834,78,2.014,91,1.844,93,3.35,95,1.414,100,1.778,102,1.838,103,3.526,110,3.526,111,1.267,125,2.626,197,2.704,198,3.304,199,3.304,200,3.304,201,3.304,202,3.304]],["title/controllers/UsersController.html",[0,1.105,203,1.757]],["body/controllers/UsersController.html",[0,0.584,2,0.652,3,0.163,4,0.163,5,0.135,7,0.259,8,0.841,10,1.472,11,0.042,12,0.841,14,1.32,15,0.671,16,0.439,17,0.421,20,0.163,21,0.03,22,1.065,24,1.838,26,0.018,27,0.018,56,0.917,58,2.173,64,0.917,80,2.001,95,0.652,96,1.679,102,1.571,121,1.643,122,1.643,125,2.815,136,1.247,142,1.709,145,1.247,148,3.128,149,1.247,174,2.55,182,1.065,183,0.929,193,1.887,195,1.709,203,1.49,204,1.247,205,3.142,206,2.445,207,2.445,208,2.445,209,2.445,210,3.063,211,1.524,212,1.524,213,3.063,214,2.445,215,1.524,216,1.524,217,1.524,218,1.524,219,1.524,220,1.524,221,2.445,222,1.524,223,2.445,224,1.524,225,1.524,226,1.524,227,1.524,228,2.445,229,1.524,230,1.524,231,1.524,232,1.524,233,1.524,234,1.524,235,2.445,236,3.506,237,1.524,238,1.524,239,1.467,240,1.247,241,1.247,242,1.247,243,1.065,244,3.063,245,3.506,246,2.445,247,3.063,248,2.445,249,1.524,250,1.524,251,1.524,252,1.524,253,1.524,254,1.524,255,1.524,256,1.524,257,1.524,258,1.524,259,1.247,260,1.524,261,1.524,262,1.524,263,1.524,264,1.524,265,1.524,266,1.524,267,1.524,268,1.524,269,1.524,270,1.524]],["title/modules/UsersModule.html",[28,1.38,36,1.551]],["body/modules/UsersModule.html",[2,1.752,3,0.327,4,0.327,5,0.27,11,0.042,16,0.566,17,0.844,20,0.327,21,0.06,26,0.029,27,0.029,28,1.96,30,1.465,31,1.96,36,2.846,38,2.496,39,1.864,40,1.864,42,2.861,43,2.138,51,2.138,52,1.465,53,2.861,54,1.646,55,1.646,58,1.752,203,2.813,239,2.532,240,2.503,243,2.138,271,2.503,272,2.503,273,3.059,274,3.059,275,3.059]],["title/injectables/UsersService.html",[81,0.991,239,1.38]],["body/injectables/UsersService.html",[3,0.182,4,0.182,5,0.15,7,0.288,8,0.916,11,0.043,12,0.94,14,1.392,15,0.72,16,0.46,17,0.468,20,0.182,21,0.033,24,2.056,26,0.019,27,0.019,52,0.812,56,0.947,58,1.838,64,0.831,81,0.916,82,0.913,96,1.783,102,1.021,111,0.65,115,1.185,121,1.838,122,1.838,125,2.915,148,2.602,167,2.179,169,2.602,174,2.634,178,1.388,182,2.602,183,1.034,189,1.433,193,2.004,195,1.861,239,1.275,241,1.388,242,1.388,243,1.185,259,1.388,276,1.388,277,3.342,278,2.663,279,2.663,280,2.663,281,2.663,282,1.696,283,1.696,284,2.663,285,2.663,286,1.696,287,2.663,288,1.696,289,2.663,290,1.696,291,2.663,292,1.696,293,1.696,294,2.663,295,1.696,296,1.696,297,2.663,298,1.696,299,1.696,300,1.696,301,2.663,302,1.696,303,1.696,304,2.663,305,1.696,306,1.861,307,2.663,308,1.696,309,1.696,310,1.696]],["title/coverage.html",[311,2.749]],["body/coverage.html",[0,1.615,1,1.566,5,0.227,6,2.103,11,0.041,18,1.23,21,0.098,26,0.026,27,0.026,37,1.383,56,0.498,58,1.1,64,0.498,81,1.574,83,2.103,87,1.566,89,2.103,90,2.538,96,1.23,97,2.103,98,2.538,100,1.954,101,2.103,113,2.103,114,2.103,128,4.656,134,1.566,135,2.103,150,1.23,164,2.103,183,1.566,186,1.796,187,2.103,193,1.383,194,2.103,197,2.103,203,1.566,204,2.103,239,1.23,276,2.103,311,1.796,312,2.103,313,2.57,314,2.57,315,4.577,316,2.57,317,2.103,318,2.57,319,2.103,320,4.829,321,2.103,322,2.103,323,1.796,324,4.212,325,2.103,326,2.103,327,1.796,328,2.57,329,2.57,330,2.57,331,2.57,332,1.566]],["title/dependencies.html",[31,1.66,333,2.408]],["body/dependencies.html",[11,0.043,17,0.783,21,0.055,26,0.028,27,0.028,31,1.357,50,2.32,52,1.357,54,1.526,55,1.526,95,1.213,111,1.087,334,4.439,335,2.835,336,2.835,337,2.835,338,2.835,339,2.835,340,2.835,341,3.889,342,2.835,343,2.835,344,2.835,345,2.835,346,2.835,347,2.835,348,3.889,349,2.835,350,2.835,351,2.835,352,2.835,353,2.835,354,3.889,355,2.835,356,2.835,357,2.835,358,2.835,359,2.835,360,2.835,361,2.835,362,2.835,363,2.835,364,2.835,365,2.835,366,2.835,367,2.835,368,2.835,369,2.835,370,2.835,371,2.835,372,2.835,373,2.835,374,2.835,375,2.835,376,2.835,377,2.835,378,2.835,379,2.32,380,2.835,381,2.835,382,2.835]],["title/miscellaneous/functions.html",[383,1.971,384,2.837]],["body/miscellaneous/functions.html",[7,0.735,11,0.037,26,0.037,27,0.037,317,3.539,319,4.429,383,3.539,384,3.539,385,4.324]],["title/index.html",[7,0.409,386,1.971,387,1.971]],["body/index.html",[0,0.747,11,0.021,26,0.021,27,0.021,64,0.377,111,1.136,142,1.361,169,2.07,311,1.361,312,2.424,332,1.187,379,1.593,386,2.424,387,2.424,388,2.962,389,2.962,390,2.962,391,2.962,392,4.007,393,4.007,394,2.962,395,2.962,396,1.947,397,2.962,398,2.962,399,3.585,400,2.962,401,2.962,402,4.007,403,3.585,404,2.962,405,2.962,406,2.962,407,2.962,408,1.947,409,1.947,410,1.947,411,2.962,412,1.947,413,1.947,414,1.947,415,1.947,416,1.947,417,2.962,418,1.947,419,1.947,420,1.947,421,1.947,422,1.947,423,1.947,424,1.947,425,1.947,426,1.947,427,1.947,428,1.947,429,1.947,430,1.947,431,1.947,432,2.962,433,1.947,434,1.947,435,1.947,436,1.947,437,1.947,438,3.585,439,1.947,440,2.962,441,2.962,442,1.947,443,1.947,444,1.947,445,1.947,446,1.947,447,2.962,448,1.947,449,1.947,450,1.947,451,1.947,452,1.947,453,1.947,454,1.947,455,1.947,456,1.947,457,1.947,458,1.947,459,1.361,460,1.947,461,1.947,462,1.947,463,2.962,464,1.947,465,1.947,466,1.947,467,2.962,468,1.947,469,1.947,470,4.54,471,1.947,472,1.947,473,1.947,474,1.947,475,1.947,476,1.947,477,1.947,478,1.947,479,1.947,480,2.962,481,1.947,482,1.947,483,1.947,484,1.947,485,1.947,486,1.947,487,1.947,488,1.947,489,1.947,490,1.947,491,4.007,492,1.947,493,1.947,494,1.947,495,1.947,496,1.947,497,1.947,498,1.947,499,1.947,500,1.947,501,1.947,502,1.947,503,1.947,504,1.947,505,1.947,506,1.947,507,1.947,508,1.947,509,1.947,510,1.947,511,1.947,512,1.947,513,1.947,514,1.947,515,1.947,516,1.947,517,1.947,518,1.947,519,1.947]],["title/classes/init1644393371912.html",[21,0.056,323,2.015]],["body/classes/init1644393371912.html",[3,0.267,4,0.267,5,0.22,7,0.423,8,1.222,11,0.041,12,0.907,14,1.222,15,0.546,16,0.267,20,0.267,21,0.049,26,0.026,27,0.026,56,0.989,64,0.802,88,1.066,91,1.521,92,1.519,102,1.363,111,0.956,121,1.521,122,1.521,126,1.741,127,1.741,174,2.43,189,1.341,277,3.468,306,2.483,321,3.695,322,2.039,323,3.155,332,2.166,459,2.483,520,2.908,521,3.389,522,4.061,523,2.908,524,2.492,525,2.908,526,4.349,527,2.492,528,2.908,529,2.492,530,2.039,531,2.039,532,2.908,533,2.039,534,2.492,535,2.039,536,2.492,537,2.039,538,2.039,539,2.039]],["title/modules.html",[30,1.883]],["body/modules.html",[11,0.035,26,0.035,27,0.035,29,2.504,30,1.967,35,2.211,36,2.211,540,5.295,541,5.295,542,5.295,543,5.295]],["title/overview.html",[544,3.219]],["body/overview.html",[2,1.366,11,0.04,18,2.257,26,0.03,27,0.03,29,3.449,30,1.528,31,2.017,32,2.613,33,2.613,34,2.613,35,2.804,36,2.804,37,2.537,38,2.567,39,1.946,40,1.946,78,1.946,82,1.718,88,1.366,150,2.257,159,2.613,160,2.613,239,2.257,271,2.613,272,2.613,544,2.613,545,4.212,546,3.192,547,3.192,548,3.192]],["title/classes/userdata1644569328662.html",[21,0.056,327,2.015]],["body/classes/userdata1644569328662.html",[3,0.267,4,0.267,5,0.22,7,0.423,8,1.222,11,0.041,12,0.907,14,1.222,15,0.546,16,0.267,20,0.267,21,0.049,26,0.026,27,0.026,56,0.961,64,0.802,88,1.066,91,1.521,102,1.363,111,0.956,121,1.521,122,1.521,126,1.741,127,1.741,174,2.43,189,1.341,205,2.908,277,3.468,306,2.483,325,3.695,326,2.039,327,3.155,332,2.166,459,2.483,520,2.908,521,3.389,522,4.061,523,2.908,525,2.908,526,4.349,528,2.908,530,2.039,531,2.039,532,2.908,533,2.039,535,2.039,537,2.039,538,2.039,539,2.039,549,2.492,550,2.492,551,2.492,552,2.492,553,2.492]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["0",{"_index":128,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["0.1.13",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["0.27.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["0.27.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":108,"title":{},"body":{"entities/Name.html":{}}}],["14.3.2",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":546,"title":{},"body":{"overview.html":{}}}],["3",{"_index":545,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":547,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":548,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":494,"title":{},"body":{"index.html":{}}}],["add",{"_index":165,"title":{},"body":{"injectables/NamesService.html":{}}}],["add(text",{"_index":172,"title":{},"body":{"injectables/NamesService.html":{}}}],["addname",{"_index":138,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(@body",{"_index":157,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(name",{"_index":141,"title":{},"body":{"controllers/NamesController.html":{}}}],["addons",{"_index":504,"title":{},"body":{"index.html":{}}}],["anoop",{"_index":518,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":393,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":93,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/User.html":{}}}],["apiproperty()@column",{"_index":200,"title":{},"body":{"entities/User.html":{}}}],["apiquery",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('delete",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('get",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('post",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('update",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":509,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":424,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":429,"title":{},"body":{"index.html":{}}}],["async",{"_index":277,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["author",{"_index":517,"title":{},"body":{"index.html":{}}}],["await",{"_index":306,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["aws\\azure\\heroku",{"_index":497,"title":{},"body":{"index.html":{}}}],["based",{"_index":475,"title":{},"body":{"index.html":{}}}],["body",{"_index":148,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["body.name",{"_index":304,"title":{},"body":{"injectables/UsersService.html":{}}}],["boot",{"_index":390,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":543,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":540,"title":{},"body":{"modules.html":{}}}],["build",{"_index":460,"title":{},"body":{"index.html":{}}}],["built",{"_index":399,"title":{},"body":{"index.html":{}}}],["came",{"_index":133,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["catch",{"_index":300,"title":{},"body":{"injectables/UsersService.html":{}}}],["cd",{"_index":496,"title":{},"body":{"index.html":{}}}],["chalk",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["character",{"_index":533,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["cheatsheet",{"_index":503,"title":{},"body":{"index.html":{}}}],["checker",{"_index":506,"title":{},"body":{"index.html":{}}}],["checking",{"_index":487,"title":{},"body":{"index.html":{}}}],["ci",{"_index":482,"title":{},"body":{"index.html":{}}}],["ci.yml",{"_index":479,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["classes",{"_index":88,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["clone",{"_index":443,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_namesmodule",{"_index":159,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_namesmodule_providers",{"_index":160,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":271,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":272,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":388,"title":{},"body":{"index.html":{}}}],["color",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["column",{"_index":110,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["column({type",{"_index":105,"title":{},"body":{"entities/Name.html":{}}}],["commit",{"_index":467,"title":{},"body":{"index.html":{}}}],["complete",{"_index":389,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":510,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":513,"title":{},"body":{"index.html":{}}}],["compose",{"_index":458,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('name",{"_index":132,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["const",{"_index":182,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraint",{"_index":535,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(namesrepository",{"_index":168,"title":{},"body":{"injectables/NamesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":282,"title":{},"body":{"injectables/UsersService.html":{}}}],["contents",{"_index":396,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('names",{"_index":153,"title":{},"body":{"controllers/NamesController.html":{}}}],["controller('users",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copy",{"_index":449,"title":{},"body":{"index.html":{}}}],["correct",{"_index":454,"title":{},"body":{"index.html":{}}}],["count",{"_index":116,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["coverage",{"_index":311,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":189,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["create(body",{"_index":285,"title":{},"body":{"injectables/UsersService.html":{}}}],["createnamedto",{"_index":87,"title":{"classes/CreateNameDto.html":{}},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["createusers",{"_index":206,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(body",{"_index":211,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusersdto",{"_index":96,"title":{"classes/CreateUsersDto.html":{}},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creation",{"_index":421,"title":{},"body":{"index.html":{}}}],["database",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":126,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["delete",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apitags('delete",{"_index":217,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":278,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":287,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteusers",{"_index":207,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(@param('id",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(id",{"_index":216,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":434,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":441,"title":{},"body":{"index.html":{}}}],["description",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{}}}],["desktop",{"_index":439,"title":{},"body":{"index.html":{}}}],["details",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{}}}],["details'})@apinotfoundresponse",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{}}}],["detection",{"_index":490,"title":{},"body":{"index.html":{}}}],["docker",{"_index":438,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":312,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":523,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["down(queryrunner",{"_index":525,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["dto/create",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["efortless",{"_index":428,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["entities",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/Name.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/name.entity",{"_index":152,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{}}}],["entities/user.entity",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":100,"title":{"entities/Name.html":{},"entities/User.html":{}},"body":{"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('name",{"_index":112,"title":{},"body":{"entities/Name.html":{}}}],["entity('users",{"_index":202,"title":{},"body":{"entities/User.html":{}}}],["env",{"_index":451,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":450,"title":{},"body":{"index.html":{}}}],["err",{"_index":301,"title":{},"body":{"injectables/UsersService.html":{}}}],["event",{"_index":123,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["eventemittermodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["eventemittermodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["express",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":191,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["extentia/code",{"_index":445,"title":{},"body":{"index.html":{}}}],["false",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{}}}],["false})@apiokresponse({type",{"_index":222,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["files",{"_index":457,"title":{},"body":{"index.html":{}}}],["findall",{"_index":279,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(name",{"_index":289,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":280,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(userid",{"_index":291,"title":{},"body":{"injectables/UsersService.html":{}}}],["flag",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":412,"title":{},"body":{"index.html":{}}}],["framework",{"_index":431,"title":{},"body":{"index.html":{}}}],["free",{"_index":427,"title":{},"body":{"index.html":{}}}],["fun",{"_index":416,"title":{},"body":{"index.html":{}}}],["function",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":384,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":145,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apitags('get",{"_index":226,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apitags('users')@apiquery({name",{"_index":220,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":175,"title":{},"body":{"injectables/NamesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getname",{"_index":139,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(@param('id",{"_index":155,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(id",{"_index":144,"title":{},"body":{"controllers/NamesController.html":{}}}],["getting",{"_index":386,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusers",{"_index":208,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@query('name",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(name",{"_index":219,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid",{"_index":209,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(@param('id",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(id",{"_index":225,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":442,"title":{},"body":{"index.html":{}}}],["github",{"_index":477,"title":{},"body":{"index.html":{}}}],["goal",{"_index":418,"title":{},"body":{"index.html":{}}}],["good",{"_index":391,"title":{},"body":{"index.html":{}}}],["handle",{"_index":117,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["handle(event",{"_index":118,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["having",{"_index":415,"title":{},"body":{"index.html":{}}}],["health",{"_index":505,"title":{},"body":{"index.html":{}}}],["hello",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["hook",{"_index":468,"title":{},"body":{"index.html":{}}}],["host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["https://compodoc.app",{"_index":511,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/recipes/terminus",{"_index":508,"title":{},"body":{"index.html":{}}}],["https://github.com/ajinabraham/njsscan#github",{"_index":493,"title":{},"body":{"index.html":{}}}],["https://github.com/anoopk",{"_index":444,"title":{},"body":{"index.html":{}}}],["id",{"_index":102,"title":{},"body":{"entities/Name.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["identifier",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":520,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["important",{"_index":436,"title":{},"body":{"index.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":465,"title":{},"body":{"index.html":{}}}],["includes",{"_index":483,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["information",{"_index":455,"title":{},"body":{"index.html":{}}}],["init.ts",{"_index":322,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["init.ts:12",{"_index":527,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:4",{"_index":524,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:6",{"_index":529,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init1644393371912",{"_index":323,"title":{"classes/init1644393371912.html":{}},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["injectable",{"_index":81,"title":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":435,"title":{},"body":{"index.html":{}}}],["injectrepository",{"_index":178,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(name",{"_index":179,"title":{},"body":{"injectables/NamesService.html":{}}}],["injectrepository(user",{"_index":296,"title":{},"body":{"injectables/UsersService.html":{}}}],["insecure",{"_index":488,"title":{},"body":{"index.html":{}}}],["inserted.listener",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["inserted.listener.ts",{"_index":114,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["inserted.listener.ts:6",{"_index":129,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["inserted.listener.ts:8",{"_index":120,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["install",{"_index":448,"title":{},"body":{"index.html":{}}}],["installation",{"_index":401,"title":{},"body":{"index.html":{}}}],["instrumentations",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["integration",{"_index":500,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":223,"title":{},"body":{"controllers/UsersController.html":{}}}],["javascript",{"_index":409,"title":{},"body":{"index.html":{}}}],["key",{"_index":538,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["kumar",{"_index":519,"title":{},"body":{"index.html":{}}}],["language",{"_index":433,"title":{},"body":{"index.html":{}}}],["length",{"_index":107,"title":{},"body":{"entities/Name.html":{}}}],["linter",{"_index":484,"title":{},"body":{"index.html":{}}}],["linter/new",{"_index":469,"title":{},"body":{"index.html":{}}}],["list",{"_index":166,"title":{},"body":{"injectables/NamesService.html":{}}}],["listeners/name",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["listnames",{"_index":140,"title":{},"body":{"controllers/NamesController.html":{}}}],["local",{"_index":440,"title":{},"body":{"index.html":{}}}],["localhost:3000",{"_index":462,"title":{},"body":{"index.html":{}}}],["localhost:3000/api",{"_index":464,"title":{},"body":{"index.html":{}}}],["localhost:3000/names",{"_index":463,"title":{},"body":{"index.html":{}}}],["main",{"_index":417,"title":{},"body":{"index.html":{}}}],["making",{"_index":419,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["metadata",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["migration:run",{"_index":461,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":521,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["miscellaneous",{"_index":383,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modern",{"_index":408,"title":{},"body":{"index.html":{}}}],["modulables",{"_index":425,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["motivation",{"_index":398,"title":{},"body":{"index.html":{}}}],["n",{"_index":473,"title":{},"body":{"index.html":{}}}],["name",{"_index":56,"title":{"entities/Name.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["name.dto",{"_index":190,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["name.dto.ts",{"_index":90,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:4",{"_index":94,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["name.text",{"_index":184,"title":{},"body":{"injectables/NamesService.html":{}}}],["nameinsertedlistener",{"_index":37,"title":{"injectables/NameInsertedListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"coverage.html":{},"overview.html":{}}}],["names",{"_index":137,"title":{},"body":{"controllers/NamesController.html":{}}}],["names.controller",{"_index":162,"title":{},"body":{"modules/NamesModule.html":{}}}],["names.service",{"_index":151,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{}}}],["names/entities/name.entity",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["names/names.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["namescontroller",{"_index":134,"title":{"controllers/NamesController.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"coverage.html":{}}}],["namesmodule",{"_index":35,"title":{"modules/NamesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules.html":{},"overview.html":{}}}],["namesrepository",{"_index":171,"title":{},"body":{"injectables/NamesService.html":{}}}],["namesservice",{"_index":150,"title":{"injectables/NamesService.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"coverage.html":{},"overview.html":{}}}],["nestjs",{"_index":406,"title":{},"body":{"index.html":{}}}],["nestjs.git",{"_index":446,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":183,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newusers",{"_index":302,"title":{},"body":{"injectables/UsersService.html":{}}}],["newusers.name",{"_index":303,"title":{},"body":{"injectables/UsersService.html":{}}}],["njsscan",{"_index":492,"title":{},"body":{"index.html":{}}}],["node",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":447,"title":{},"body":{"index.html":{}}}],["npx",{"_index":512,"title":{},"body":{"index.html":{}}}],["null",{"_index":532,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["number",{"_index":125,"title":{},"body":{"injectables/NameInsertedListener.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obervability",{"_index":498,"title":{},"body":{"index.html":{}}}],["onevent",{"_index":130,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["onevent('name.inserted",{"_index":119,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["open",{"_index":474,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":499,"title":{},"body":{"index.html":{}}}],["opentelemetry/api",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/auto",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/exporter",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":122,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["ormconfig.example.json",{"_index":452,"title":{},"body":{"index.html":{}}}],["ormconfig.json",{"_index":453,"title":{},"body":{"index.html":{}}}],["otlp",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":495,"title":{},"body":{"index.html":{}}}],["overview",{"_index":544,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":502,"title":{},"body":{"index.html":{}}}],["p",{"_index":514,"title":{},"body":{"index.html":{}}}],["package",{"_index":333,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":149,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":121,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["parseint",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":188,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["partialtype(createnamedto",{"_index":192,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["partialtype(createusersdto",{"_index":196,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["password",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["pattern",{"_index":489,"title":{},"body":{"index.html":{}}}],["penetration",{"_index":501,"title":{},"body":{"index.html":{}}}],["pg",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["pk_86c85ab0235bbe92757ce7a8f57",{"_index":536,"title":{},"body":{"classes/init1644393371912.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":553,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["plugables",{"_index":426,"title":{},"body":{"index.html":{}}}],["port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":142,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post()@apitags('post",{"_index":212,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["powered",{"_index":410,"title":{},"body":{"index.html":{}}}],["practices",{"_index":392,"title":{},"body":{"index.html":{}}}],["pre",{"_index":466,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":136,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":400,"title":{},"body":{"index.html":{}}}],["primary",{"_index":537,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["primarygeneratedcolumn",{"_index":103,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty",{"_index":198,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":115,"title":{},"body":{"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["process.env.postgres_database",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_port",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":397,"title":{},"body":{"index.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["properties",{"_index":91,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"entities/User.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["proto",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":522,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["put",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id')@apitags('update",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryrunner",{"_index":526,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query",{"_index":530,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query(`drop",{"_index":539,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["rep",{"_index":413,"title":{},"body":{"index.html":{}}}],["repository",{"_index":169,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["required",{"_index":221,"title":{},"body":{"controllers/UsersController.html":{}}}],["requires",{"_index":437,"title":{},"body":{"index.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["run",{"_index":402,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":516,"title":{},"body":{"index.html":{}}}],["serial",{"_index":531,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["server",{"_index":422,"title":{},"body":{"index.html":{}}}],["servers",{"_index":394,"title":{},"body":{"index.html":{}}}],["service",{"_index":481,"title":{},"body":{"index.html":{}}}],["setup",{"_index":476,"title":{},"body":{"index.html":{}}}],["side",{"_index":423,"title":{},"body":{"index.html":{}}}],["skip",{"_index":471,"title":{},"body":{"index.html":{}}}],["snyk",{"_index":485,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["src/.../main.ts",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["src/listeners/name",{"_index":113,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/1644393371912",{"_index":321,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["src/migration/1644569328662",{"_index":325,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["src/names/dto/create",{"_index":89,"title":{},"body":{"classes/CreateNameDto.html":{},"coverage.html":{}}}],["src/names/dto/update",{"_index":187,"title":{},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts",{"_index":101,"title":{},"body":{"entities/Name.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts:6",{"_index":104,"title":{},"body":{"entities/Name.html":{}}}],["src/names/entities/name.entity.ts:9",{"_index":109,"title":{},"body":{"entities/Name.html":{}}}],["src/names/names.controller.ts",{"_index":135,"title":{},"body":{"controllers/NamesController.html":{},"coverage.html":{}}}],["src/names/names.controller.ts:14",{"_index":146,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:19",{"_index":143,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:9",{"_index":147,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.module.ts",{"_index":161,"title":{},"body":{"modules/NamesModule.html":{}}}],["src/names/names.service.ts",{"_index":164,"title":{},"body":{"injectables/NamesService.html":{},"coverage.html":{}}}],["src/names/names.service.ts:12",{"_index":177,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:16",{"_index":176,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:20",{"_index":173,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:7",{"_index":170,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/users/dto/create",{"_index":97,"title":{},"body":{"classes/CreateUsersDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":194,"title":{},"body":{"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":197,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":201,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":199,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":204,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:34",{"_index":224,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":230,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":215,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":218,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":273,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":276,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":290,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":292,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":286,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":295,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":288,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":283,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":414,"title":{},"body":{"index.html":{}}}],["started",{"_index":387,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":404,"title":{},"body":{"index.html":{}}}],["strict",{"_index":486,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["styles",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":541,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["svg",{"_index":542,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":379,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":332,"title":{},"body":{"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["terminus",{"_index":507,"title":{},"body":{"index.html":{}}}],["test",{"_index":403,"title":{},"body":{"index.html":{}}}],["tests",{"_index":470,"title":{},"body":{"index.html":{}}}],["text",{"_index":92,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"injectables/NamesService.html":{},"classes/init1644393371912.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.count",{"_index":131,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["this.findbyid(id",{"_index":307,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.namesrepository.find",{"_index":180,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.findone(id",{"_index":181,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.save(name",{"_index":185,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesservice.add(name.text",{"_index":158,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.get(id",{"_index":156,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.list",{"_index":154,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.usersrepository.find",{"_index":297,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneorfail(userid",{"_index":299,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":310,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newusers",{"_index":305,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":309,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(body",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(name",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":405,"title":{},"body":{"index.html":{}}}],["trace",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["transformer",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":298,"title":{},"body":{"injectables/UsersService.html":{}}}],["tsconfig.json",{"_index":515,"title":{},"body":{"index.html":{}}}],["type",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeorm",{"_index":111,"title":{},"body":{"entities/Name.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeormmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([name",{"_index":163,"title":{},"body":{"modules/NamesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":275,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":411,"title":{},"body":{"index.html":{}}}],["ui",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["uncomplicaded",{"_index":420,"title":{},"body":{"index.html":{}}}],["unit",{"_index":480,"title":{},"body":{"index.html":{}}}],["up",{"_index":459,"title":{},"body":{"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["up(queryrunner",{"_index":528,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["update",{"_index":281,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":294,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatenamedto",{"_index":186,"title":{"classes/UpdateNameDto.html":{}},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["updateusers",{"_index":210,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusers(id",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusersdto",{"_index":193,"title":{"classes/UpdateUsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":407,"title":{},"body":{"index.html":{}}}],["used",{"_index":432,"title":{},"body":{"index.html":{}}}],["user",{"_index":58,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":195,"title":{},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":98,"title":{},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":99,"title":{},"body":{"classes/CreateUsersDto.html":{}}}],["user.name",{"_index":308,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.ts",{"_index":326,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userdata.ts:12",{"_index":550,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:4",{"_index":549,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:6",{"_index":551,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata1644569328662",{"_index":327,"title":{"classes/userdata1644569328662.html":{}},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userid",{"_index":293,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":205,"title":{},"body":{"controllers/UsersController.html":{},"classes/userdata1644569328662.html":{}}}],["users')@apicreatedresponse({type",{"_index":213,"title":{},"body":{"controllers/UsersController.html":{}}}],["users')@apiokresponse({type",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":274,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":203,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":284,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":239,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@apibadrequestresponse",{"_index":214,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":472,"title":{},"body":{"index.html":{}}}],["value",{"_index":127,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["varchar",{"_index":106,"title":{},"body":{"entities/Name.html":{}}}],["varying",{"_index":552,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["varying(12",{"_index":534,"title":{},"body":{"classes/init1644393371912.html":{}}}],["via",{"_index":491,"title":{},"body":{"index.html":{}}}],["void",{"_index":124,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["web",{"_index":430,"title":{},"body":{"index.html":{}}}],["wired",{"_index":395,"title":{},"body":{"index.html":{}}}],["within",{"_index":456,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":478,"title":{},"body":{"index.html":{}}}],["world",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            NameInsertedListener\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { NamesModule } from './names/names.module';\nimport { NameInsertedListener } from './listeners/name-inserted.listener';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { Name } from './names/entities/name.entity';\nimport { User } from './users/entities/user.entity';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    NamesModule,\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n\n      host: process.env.POSTGRES_HOST,\n      port: parseInt(\n        process.env.POSTGRES_PORT ? process.env.POSTGRES_PORT : '3000',\n      ),\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [Name, User],\n      //ssl: true,\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, NameInsertedListener],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNameDto.html":{"url":"classes/CreateNameDto.html","title":"class - CreateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/create-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/dto/create-name.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateNameDto {\n  @ApiProperty()\n  text: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersDto.html":{"url":"classes/CreateUsersDto.html","title":"class - CreateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUsersDto {\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Name.html":{"url":"entities/Name.html","title":"entity - Name","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/entities/name.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('name')\nexport class Name {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column({ type: 'varchar', length: 12 })\n  text!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameInsertedListener.html":{"url":"injectables/NameInsertedListener.html","title":"injectable - NameInsertedListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NameInsertedListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listeners/name-inserted.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('name.inserted')\n                \n            \n\n            \n                \n                    Defined in src/listeners/name-inserted.listener.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/listeners/name-inserted.listener.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class NameInsertedListener {\n  private count = 0;\n  @OnEvent('name.inserted')\n  handle(event: string) {\n    this.count++;\n    console.log('Name came in ', this.count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NamesController.html":{"url":"controllers/NamesController.html","title":"controller - NamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                names\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addName\n                            \n                            \n                                getName\n                            \n                            \n                                listNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addName\n                        \n                    \n                \n            \n            \n                \naddName(name: Name)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Name\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listNames\n                        \n                    \n                \n            \n            \n                \nlistNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { NamesService } from './names.service';\nimport { Name } from './entities/name.entity';\n\n@Controller('names')\nexport class NamesController {\n  constructor(private namesService: NamesService) {}\n  @Get()\n  listNames() {\n    return this.namesService.list();\n  }\n\n  @Get(':id')\n  getName(@Param('id') id: string) {\n    return this.namesService.get(id);\n  }\n\n  @Post()\n  addName(@Body() name: Name) {\n    return this.namesService.add(name.text);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NamesModule.html":{"url":"modules/NamesModule.html","title":"module - NamesModule","body":"\n                   \n\n\n\n\n    Modules\n    NamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\n\nNamesService\n\nNamesService\n\n\n\nNamesModule\n\nNamesModule\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/names/names.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NamesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NamesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NamesService } from './names.service';\nimport { NamesController } from './names.controller';\nimport { Name } from './entities/name.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Name])],\n  controllers: [NamesController],\n  providers: [NamesService, Name, EventEmitterModule],\n})\nexport class NamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NamesService.html":{"url":"injectables/NamesService.html","title":"injectable - NamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/names/names.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist()\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Name } from './entities/name.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class NamesService {\n  constructor(\n    @InjectRepository(Name) private namesRepository: Repository,\n  ) {}\n\n  list(): Promise {\n    return this.namesRepository.find();\n  }\n\n  get(id: string): Promise {\n    return this.namesRepository.findOne(id);\n  }\n\n  add(text: string): Promise {\n    const name = new Name();\n    name.text = text;\n    return this.namesRepository.save(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNameDto.html":{"url":"classes/UpdateNameDto.html","title":"class - UpdateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/update-name.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNameDto } from './create-name.dto';\n\nexport class UpdateNameDto extends PartialType(CreateNameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsersDto.html":{"url":"classes/UpdateUsersDto.html","title":"class - UpdateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUsersDto } from './create-user.dto';\n\nexport class UpdateUsersDto extends PartialType(CreateUsersDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\nimport { ApiProperty } from '@nestjs/swagger';\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  @Column()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUsers\n                            \n                            \n                                deleteUsers\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersbyId\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUsers\n                        \n                    \n                \n            \n            \n                \ncreateUsers(body: CreateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiTags('Post Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \ndeleteUsers(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags('Delete Users')@ApiCreatedResponse({type: User})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiTags('Users')@ApiQuery({name: 'name', required: false})@ApiOkResponse({type: User, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersbyId\n                        \n                    \n                \n            \n            \n                \ngetUsersbyId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiTags('Get Users')@ApiOkResponse({type: User, description: 'Get user details'})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers(id: number, body: UpdateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiTags('Update Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Query,\n  NotFoundException,\n  ParseIntPipe,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  @ApiTags('Users')\n  @ApiQuery({ name: 'name', required: false })\n  @ApiOkResponse({ type: User, isArray: true })\n  getUsers(@Query('name') name: string): Promise {\n    return this.usersService.findall(name);\n  }\n\n  @Get(':id')\n  @ApiTags('Get Users')\n  @ApiOkResponse({ type: User, description: 'Get user details' })\n  @ApiNotFoundResponse()\n  getUsersbyId(@Param('id', ParseIntPipe) id: number): Promise {\n    const user = this.usersService.findbyid(id);\n    if (!user) {\n      throw new NotFoundException();\n    }\n    return user;\n  }\n  @Post()\n  @ApiTags('Post Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  createUsers(@Body() body: CreateUsersDto): Promise {\n    return this.usersService.create(body);\n  }\n  @Put(':id')\n  @ApiTags('Update Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  updateUsers(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateUsersDto,\n  ): Promise {\n    return this.usersService.update(id, body);\n  }\n  @Delete(':id')\n  @ApiTags('Delete Users')\n  @ApiCreatedResponse({ type: User })\n  deleteUsers(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.usersService.deleteuser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, User, EventEmitterModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                deleteuser\n                            \n                            \n                                findall\n                            \n                            \n                                    Async\n                                findbyid\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteuser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findall\n                        \n                    \n                \n            \n            \n                \nfindall(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findbyid\n                        \n                    \n                \n            \n            \n                \n                    \n                    findbyid(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, body: UpdateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private usersRepository: Repository,\n  ) {}\n\n  findall(name: string): Promise {\n    if (name) {\n      return this.usersRepository.find({\n        where: [{ name: name }],\n      });\n    } else {\n      return this.usersRepository.find();\n    }\n  }\n\n  async findbyid(userID: number): Promise {\n    try {\n      const user = this.usersRepository.findOneOrFail(userID);\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  create(body: CreateUsersDto): Promise {\n    const newUsers = new User();\n    newUsers.name = body.name;\n    return this.usersRepository.save(newUsers);\n  }\n\n  async update(id: number, body: UpdateUsersDto): Promise {\n    const user = await this.findbyid(id);\n    user.name = body.name || '';\n    return this.usersRepository.save(user);\n  }\n  async deleteuser(id: number): Promise {\n    const user = await this.findbyid(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/listeners/name-inserted.listener.ts\n            \n            injectable\n            NameInsertedListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1644393371912-init.ts\n            \n            class\n            init1644393371912\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1644569328662-userdata.ts\n            \n            class\n            userdata1644569328662\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/dto/create-name.dto.ts\n            \n            class\n            CreateNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/names/dto/update-name.dto.ts\n            \n            class\n            UpdateNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/entities/name.entity.ts\n            \n            entity\n            Name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/names.controller.ts\n            \n            controller\n            NamesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/names.service.ts\n            \n            injectable\n            NamesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/event-emitter : ^1.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @opentelemetry/api : ^1.0.4\n        \n            @opentelemetry/auto-instrumentations-node : ^0.27.3\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.27.0\n        \n            @opentelemetry/sdk-node : ^0.27.0\n        \n            ansi-styles : ^6.1.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.5.1\n        \n            dotenv : ^14.3.2\n        \n            has-flag : ^5.0.1\n        \n            helmet : ^5.0.2\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            supports-color : ^9.2.1\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Code Complete\n\n  \n    A boot repository that has some good practices for API servers wired in.\n    \n  \n\n\n\nTable of Contents\n\nAbout the Project\nMotivation\nBuilt With\n\n\nGetting Started\nPrerequisites\nInstallation\nRun and Test\n\n\nStay in touch\n\nAbout the project\nA boot repository that has some good practices for API servers wired in. Built on nestjs and use modern Javascript powered by \nTypescript. \nTo use, fork into your rep and start having fun.\nMotivation\nMain goal is making uncomplicaded creation of server-side applications, modulables, plugables, free and efortless \narchitecture.\nBuilt With\n\nnestjs - The web framework used\nTypescript - Main Language\ntypeorm - Used for dependency Injection\n\nGetting Started\nPrerequisites\nImportant! Requires Docker Desktop for local deployments.\nInstallation\ngit clone https://github.com/anoopk-extentia/code-complete-nestjs.git\nnpm install\nCopy .env.example to .env and ormconfig.example.json to ormconfig.json\nCorrect the information within these files\ndocker-compose up --build\nnpm run typeorm migration:run\nRun and Test\nget localhost:3000\nget localhost:3000/names\npost localhost:3000/names\nAPI Documentation\nget localhost:3000/api\nPractices Included\nPre-commit hook to run linter/new tests (skip using -n with commit)\nOpen API (Swagger)\nDocker based setup for local deployments\nGithub Workflow (ci.yml) \nUnit Tests (Controller and Service)\nCI Includes (linter, unit tests, test coverage Snyk tests)\nStrict Type Checking\nInsecure code pattern detection via [njsscan] https://github.com/ajinabraham/njsscan#github-action\nPractices Outstanding\nCD - AWS\\Azure\\Heroku\nObervability via OpenTelemetry\nIntegration tests\nPenetration tests\nOWASP Cheatsheet\nAddons\nHealth Checker via [terminus] https://docs.nestjs.com/recipes/terminus\nApp Documentation via [Compodoc] https://compodoc.app/ (npx @compodoc/compodoc -p tsconfig.json -s)\nStay in Touch\n\nAuthor - Anoop Kumar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/init1644393371912.html":{"url":"classes/init1644393371912.html","title":"class - init1644393371912","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  init1644393371912\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644393371912-init.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'init1644393371912'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644393371912-init.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class init1644393371912 implements MigrationInterface {\n  name = 'init1644393371912';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"name\" (\"id\" SERIAL NOT NULL, \"text\" character varying(12) NOT NULL, CONSTRAINT \"PK_86c85ab0235bbe92757ce7a8f57\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\nNamesService\n\nNamesService\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userdata1644569328662.html":{"url":"classes/userdata1644569328662.html","title":"class - userdata1644569328662","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userdata1644569328662\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644569328662-userdata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userdata1644569328662'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644569328662-userdata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class userdata1644569328662 implements MigrationInterface {\n  name = 'userdata1644569328662';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
