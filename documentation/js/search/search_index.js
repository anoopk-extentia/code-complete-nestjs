var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.928,1,1.796]],["body/controllers/AppController.html",[0,1.433,1,2.772,2,1.379,3,0.355,4,0.355,5,0.293,6,2.888,7,0.561,8,1.433,9,4.308,10,1.242,11,0.04,12,0.72,13,3.518,14,1.118,15,1.036,16,0.455,17,0.903,18,2.418,19,2.888,20,0.355,21,0.065,22,2.473,23,3.518,24,1.533,25,3.518,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.419,29,1.796]],["body/modules/AppModule.html",[1,2.344,2,1.249,3,0.215,4,0.215,5,0.178,11,0.041,16,0.556,17,0.548,18,2.305,19,1.753,20,0.215,21,0.04,26,0.022,27,0.022,28,1.549,29,3.322,30,1.038,31,1.549,32,1.753,33,1.753,34,1.753,35,2.583,36,2.583,37,2.583,38,1.96,39,1.313,40,1.313,41,2.136,42,2.24,43,2.344,44,2.24,45,2.136,46,2.136,47,2.136,48,2.136,49,2.136,50,2.136,51,1.753,52,1.501,53,1.038,54,1.501,55,1.163,56,1.163,57,0.652,58,2.136,59,1.389,60,2.136,61,2.136,62,3.187,63,1.501,64,2.136,65,3.187,66,1.753,67,2.136,68,2.136,69,2.136,70,0.437,71,2.136,72,2.136,73,2.136,74,2.136,75,2.136,76,3.187,77,2.136,78,2.136,79,2.136,80,2.136,81,2.136,82,2.136,83,2.136,84,1.313,85,2.136,86,1.753]],["title/injectables/AppService.html",[18,1.419,87,1.031]],["body/injectables/AppService.html",[3,0.376,4,0.376,5,0.311,7,0.595,8,1.488,9,4.402,11,0.04,12,0.764,14,1.186,15,1.075,16,0.376,17,0.958,18,2.275,20,0.376,21,0.069,24,1.626,26,0.032,27,0.032,87,1.652,88,2.032,89,3.064,90,3.732,91,3.732,92,3.732]],["title/classes/CreateNameDto.html",[21,0.054,93,1.796]],["body/classes/CreateNameDto.html",[3,0.378,4,0.378,5,0.313,7,0.598,10,1.324,11,0.039,12,0.768,15,1.079,16,0.378,20,0.378,21,0.07,26,0.032,27,0.032,70,0.768,93,2.888,94,1.635,95,3.856,96,2.638,97,2.047,98,3.152,99,3.604,100,3.753,101,1.635]],["title/classes/CreateUsersDto.html",[21,0.054,102,1.419]],["body/classes/CreateUsersDto.html",[3,0.378,4,0.378,5,0.313,7,0.598,10,1.324,11,0.039,12,0.768,15,1.079,16,0.378,20,0.378,21,0.07,26,0.032,27,0.032,57,1.049,70,0.768,94,1.635,97,2.047,99,3.604,101,1.635,102,2.283,103,3.856,104,2.638,105,3.753]],["title/controllers/HealthController.html",[0,0.928,43,1.796]],["body/controllers/HealthController.html",[0,0.835,2,1.03,3,0.265,4,0.265,5,0.219,7,0.419,8,1.177,10,1.514,11,0.041,12,0.878,14,1.363,16,0.373,17,0.674,20,0.265,21,0.049,24,1.869,26,0.025,27,0.025,43,2.277,63,1.847,106,2.156,107,1.847,108,3.703,109,4.658,110,4.658,111,4.658,112,2.627,113,2.627,114,2.627,115,2.627,116,2.627,117,2.627,118,3.703,119,3.703,120,4.658,121,3.703,122,3.703,123,2.627,124,1.847,125,2.864,126,2.627,127,2.627,128,2.627,129,4.29,130,2.627,131,2.627,132,2.627,133,2.627,134,2.627,135,2.627,136,2.627,137,2.627]],["title/entities/Name.html",[57,0.598,138,1.59]],["body/entities/Name.html",[3,0.337,4,0.337,5,0.279,7,0.533,10,1.54,11,0.04,12,0.893,15,1.183,16,0.337,20,0.337,21,0.062,26,0.03,27,0.03,57,0.893,70,0.994,84,2.056,97,1.901,98,2.986,138,1.82,139,2.745,140,1.903,141,3.986,142,3.343,143,3.343,144,4.362,145,4.362,146,4.362,147,3.343,148,3.581,149,1.31,150,3.343]],["title/injectables/NameInsertedListener.html",[37,1.59,87,1.031]],["body/injectables/NameInsertedListener.html",[3,0.305,4,0.305,5,0.252,7,0.483,8,1.298,10,1.069,11,0.04,12,0.836,14,0.962,15,1.062,16,0.412,17,0.777,20,0.305,21,0.056,26,0.028,27,0.028,37,2.224,55,1.649,56,1.649,57,0.62,70,0.836,87,1.442,88,1.649,97,1.78,125,2.843,151,3.795,152,2.486,153,4.623,154,4.085,155,4.085,156,4.085,157,3.028,158,1.32,159,1.32,160,3.028,161,3.028,162,1.862,163,2.129,164,2.129,165,3.353,166,3.028,167,3.028,168,4.085,169,3.028,170,3.028]],["title/controllers/NamesController.html",[0,0.928,171,1.796]],["body/controllers/NamesController.html",[0,0.855,2,1.054,3,0.271,4,0.271,5,0.224,7,0.429,8,1.197,10,1.533,11,0.041,12,0.889,14,1.381,15,0.998,16,0.438,17,0.691,20,0.271,21,0.05,22,1.891,24,1.893,26,0.026,27,0.026,57,1.101,70,0.771,107,1.891,140,1.476,158,1.641,159,1.641,171,2.315,172,2.208,173,2.69,174,3.766,175,3.766,176,4.707,177,2.69,178,3.054,179,2.69,180,2.69,181,3.091,182,2.69,183,2.69,184,1.891,185,2.208,186,2.111,187,2.208,188,1.891,189,2.69,190,2.69,191,2.69,192,2.69,193,2.69,194,2.69]],["title/modules/NamesModule.html",[28,1.419,35,1.59]],["body/modules/NamesModule.html",[2,1.631,3,0.314,4,0.314,5,0.259,11,0.04,16,0.541,17,0.799,20,0.314,21,0.058,26,0.028,27,0.028,28,2.022,30,1.512,31,2.022,35,2.922,38,2.558,39,1.913,40,1.913,42,2.925,44,2.187,52,2.187,53,1.512,54,2.925,55,1.694,56,1.694,57,0.852,171,2.882,186,2.608,187,2.555,188,2.187,195,2.555,196,2.555,197,3.112,198,3.112,199,3.112]],["title/injectables/NamesService.html",[87,1.031,186,1.419]],["body/injectables/NamesService.html",[3,0.256,4,0.256,5,0.211,7,0.405,8,1.149,11,0.041,12,0.939,14,1.338,15,1.158,16,0.463,17,0.652,20,0.256,21,0.047,24,1.834,26,0.025,27,0.025,53,1.233,57,1.031,70,0.862,87,1.276,88,1.382,98,2.222,124,2.541,125,1.56,140,0.995,149,0.995,158,1.834,159,1.834,186,1.756,188,1.784,200,2.083,201,3.614,202,4.587,203,2.538,204,3.224,205,2.538,206,3.614,207,3.614,208,2.538,209,2.744,210,3.614,211,2.538,212,2.538,213,2.083,214,2.538,215,2.538,216,2.538,217,1.784,218,1.56,219,2.538,220,2.538]],["title/classes/UpdateNameDto.html",[21,0.054,221,2.053]],["body/classes/UpdateNameDto.html",[3,0.401,4,0.401,5,0.331,11,0.039,16,0.491,20,0.401,21,0.074,26,0.033,27,0.033,93,2.443,94,1.732,96,2.794,101,1.732,221,3.421,222,3.262,223,3.262,224,2.164,225,3.974,226,3.262,227,3.974]],["title/classes/UpdateUsersDto.html",[21,0.054,228,1.59]],["body/classes/UpdateUsersDto.html",[3,0.401,4,0.401,5,0.331,11,0.039,16,0.491,20,0.401,21,0.074,26,0.033,27,0.033,94,1.732,101,1.732,102,1.931,104,2.794,223,3.262,224,2.164,226,3.262,228,2.65,229,3.262,230,2.794,231,3.974]],["title/entities/User.html",[59,1.273,138,1.59]],["body/entities/User.html",[3,0.339,4,0.339,5,0.28,7,0.536,10,1.545,11,0.04,12,0.896,15,1.006,16,0.441,20,0.339,21,0.063,26,0.03,27,0.03,57,0.996,59,1.907,70,0.896,84,2.066,97,1.907,99,3.422,101,1.464,138,1.83,140,1.908,141,3.593,148,3.593,149,1.317,162,2.691,232,2.758,233,3.36,234,3.36,235,3.36,236,3.36,237,3.36]],["title/controllers/UsersController.html",[0,0.928,238,1.796]],["body/controllers/UsersController.html",[0,0.494,2,0.609,3,0.157,4,0.157,5,0.13,7,0.248,8,0.792,10,1.378,11,0.04,12,0.799,14,1.241,15,0.717,16,0.42,17,0.399,20,0.157,21,0.029,22,1.093,24,1.702,26,0.017,27,0.017,57,0.985,59,2.248,70,0.985,86,2.046,101,0.678,102,1.734,107,1.093,140,1.633,158,1.702,159,1.702,162,2.885,178,1.752,181,1.276,184,3.198,185,1.276,209,2.621,217,1.093,218,0.956,228,1.943,230,1.752,238,1.532,239,1.276,240,3.205,241,2.492,242,2.492,243,2.492,244,2.492,245,3.119,246,1.555,247,1.555,248,3.119,249,2.492,250,1.555,251,1.555,252,1.555,253,1.555,254,1.555,255,1.555,256,2.492,257,1.555,258,2.492,259,1.555,260,1.555,261,1.555,262,1.555,263,2.492,264,1.555,265,1.555,266,1.555,267,1.555,268,1.555,269,1.555,270,2.492,271,3.567,272,1.555,273,1.555,274,1.516,275,1.276,276,1.276,277,1.276,278,1.093,279,3.119,280,3.567,281,2.492,282,3.119,283,2.492,284,1.555,285,1.555,286,1.555,287,1.555,288,1.555,289,1.555,290,1.555,291,1.555,292,1.555,293,1.555,294,1.276,295,1.555,296,1.555,297,1.555,298,1.555,299,1.555,300,1.555,301,1.555,302,1.555,303,1.555,304,1.555,305,1.555]],["title/modules/UsersModule.html",[28,1.419,36,1.59]],["body/modules/UsersModule.html",[2,1.631,3,0.314,4,0.314,5,0.259,11,0.04,16,0.541,17,0.799,20,0.314,21,0.058,26,0.028,27,0.028,28,2.022,30,1.512,31,2.022,36,2.922,38,2.558,39,1.913,40,1.913,42,2.925,44,2.187,52,2.187,53,1.512,54,2.925,55,1.694,56,1.694,59,1.813,238,2.882,274,2.608,275,2.555,278,2.187,306,2.555,307,2.555,308,3.112,309,3.112,310,3.112]],["title/injectables/UsersService.html",[87,1.031,274,1.419]],["body/injectables/UsersService.html",[3,0.174,4,0.174,5,0.144,7,0.276,8,0.862,11,0.041,12,0.893,14,1.308,15,0.769,16,0.44,17,0.444,20,0.174,21,0.032,24,1.902,26,0.018,27,0.018,53,0.841,57,1.017,59,1.902,70,0.893,87,0.957,88,0.942,102,1.841,124,1.907,125,1.064,140,1.063,149,0.678,158,1.902,159,1.902,162,2.987,184,2.663,204,2.663,209,2.706,213,1.42,217,2.663,218,1.064,224,1.477,228,2.063,230,1.907,274,1.318,276,1.42,277,1.42,278,1.216,294,1.42,311,1.42,312,3.415,313,2.713,314,2.713,315,2.713,316,2.713,317,1.73,318,1.73,319,2.713,320,2.713,321,1.73,322,2.713,323,1.73,324,2.713,325,1.73,326,2.713,327,1.73,328,1.73,329,2.713,330,1.73,331,1.73,332,2.713,333,1.73,334,1.73,335,1.73,336,2.713,337,1.73,338,1.73,339,2.713,340,1.73,341,1.907,342,2.713,343,1.73,344,1.73,345,1.73]],["title/coverage.html",[346,2.802]],["body/coverage.html",[0,1.463,1,1.572,5,0.213,6,2.099,11,0.04,18,1.243,21,0.094,26,0.025,27,0.025,37,1.392,43,1.572,57,0.523,59,1.114,70,0.523,87,1.624,89,2.099,93,1.572,95,2.099,96,2.554,102,1.243,103,2.099,104,2.554,106,2.099,138,1.979,139,2.099,151,2.099,152,2.099,165,4.746,171,1.572,172,2.099,186,1.243,200,2.099,218,1.572,221,1.798,222,2.099,228,1.392,229,2.099,232,2.099,238,1.572,239,2.099,274,1.243,311,2.099,346,1.798,347,2.099,348,2.557,349,2.557,350,4.602,351,4.602,352,2.557,353,2.099,354,2.557,355,2.099,356,4.862,357,2.099,358,2.099,359,1.798,360,2.099,361,2.099,362,1.798,363,2.557,364,2.557,365,2.557,366,2.557,367,1.572]],["title/dependencies.html",[31,1.707,368,2.439]],["body/dependencies.html",[11,0.041,17,0.722,21,0.052,26,0.026,27,0.026,31,1.367,51,2.309,53,1.367,55,1.532,56,1.532,63,1.978,66,2.309,101,1.226,149,1.103,369,2.813,370,4.45,371,2.813,372,2.813,373,2.813,374,2.813,375,2.813,376,2.813,377,3.885,378,2.813,379,2.813,380,2.813,381,2.813,382,2.813,383,2.813,384,2.813,385,3.885,386,2.813,387,2.813,388,2.813,389,2.813,390,2.813,391,3.885,392,2.813,393,2.813,394,2.813,395,2.813,396,2.813,397,2.813,398,2.813,399,2.813,400,2.813,401,2.813,402,2.813,403,2.813,404,2.813,405,2.813,406,2.813,407,2.813,408,2.813,409,2.813,410,2.813,411,2.813,412,2.813,413,2.813,414,2.813,415,2.813,416,2.309,417,2.813,418,2.813,419,2.813]],["title/miscellaneous/functions.html",[420,2.002,421,2.883]],["body/miscellaneous/functions.html",[7,0.699,11,0.035,26,0.035,27,0.035,353,3.602,355,4.506,420,3.602,421,3.602,422,4.388]],["title/index.html",[7,0.389,423,2.002,424,2.002]],["body/index.html",[0,0.692,11,0.022,26,0.022,27,0.022,70,0.446,149,1.267,178,1.531,204,2.273,346,1.531,347,1.787,367,1.339,416,1.787,423,2.654,424,2.654,425,2.177,426,3.233,427,3.233,428,3.233,429,4.267,430,4.267,431,3.233,432,3.233,433,2.177,434,3.233,435,3.233,436,3.856,437,3.233,438,3.233,439,3.856,440,3.856,441,3.233,442,3.233,443,3.233,444,3.233,445,2.177,446,2.177,447,2.177,448,3.233,449,2.177,450,2.177,451,2.177,452,2.177,453,2.177,454,3.233,455,2.177,456,2.177,457,2.177,458,2.177,459,2.177,460,2.177,461,2.177,462,2.177,463,2.177,464,2.177,465,2.177,466,2.177,467,2.177,468,2.177,469,3.233,470,2.177,471,2.177,472,2.177,473,2.177,474,2.177,475,3.856,476,2.177,477,2.177,478,2.177,479,2.177,480,2.177,481,2.177,482,3.233,483,2.177,484,2.177,485,2.177,486,2.177,487,2.177,488,2.177,489,2.177,490,2.177,491,2.177,492,2.177,493,2.177,494,1.531,495,2.177,496,2.177,497,2.177,498,3.233,499,2.177,500,2.177,501,2.177,502,2.177,503,2.177,504,2.177,505,2.177,506,2.177,507,3.233,508,4.267,509,2.177,510,3.233,511,2.177,512,2.177,513,2.177,514,2.177,515,2.177,516,2.177,517,2.177,518,2.177,519,2.177,520,2.177,521,2.177,522,2.177,523,2.177,524,2.177,525,2.177,526,2.177,527,2.177,528,2.177,529,2.177,530,2.177,531,2.177,532,2.177,533,2.177,534,2.177,535,2.177,536,2.177]],["title/classes/init1644393371912.html",[21,0.054,359,2.053]],["body/classes/init1644393371912.html",[3,0.256,4,0.256,5,0.211,7,0.405,8,1.149,11,0.039,12,0.862,14,1.149,15,0.583,16,0.256,20,0.256,21,0.047,26,0.025,27,0.025,57,1.061,70,0.862,94,1.106,97,1.575,98,1.56,140,1.416,149,0.995,158,1.575,159,1.575,163,1.784,164,1.784,209,2.498,224,1.382,312,3.542,341,2.541,357,3.765,358,2.083,359,3.224,367,2.222,494,2.541,537,2.967,538,3.455,539,4.137,540,2.967,541,2.538,542,2.967,543,4.427,544,2.538,545,2.967,546,2.538,547,2.083,548,2.083,549,2.967,550,2.083,551,2.538,552,2.083,553,2.538,554,2.083,555,2.083,556,2.083]],["title/modules.html",[30,1.937]],["body/modules.html",[11,0.034,26,0.034,27,0.034,29,2.564,30,2.027,35,2.271,36,2.271,557,5.372,558,5.372,559,5.372,560,5.372]],["title/overview.html",[561,3.272]],["body/overview.html",[2,1.272,11,0.038,18,2.326,26,0.029,27,0.029,29,3.53,30,1.578,31,2.08,32,2.665,33,2.665,34,2.665,35,2.88,36,2.88,37,2.607,38,2.631,39,1.996,40,1.996,84,1.996,88,1.768,94,1.415,186,2.326,195,2.665,196,2.665,274,2.326,306,2.665,307,2.665,561,2.665,562,3.247,563,4.279,564,3.247,565,3.247]],["title/classes/userdata1644569328662.html",[21,0.054,362,2.053]],["body/classes/userdata1644569328662.html",[3,0.256,4,0.256,5,0.211,7,0.405,8,1.149,11,0.039,12,0.862,14,1.149,15,0.583,16,0.256,20,0.256,21,0.047,26,0.025,27,0.025,57,1.031,70,0.862,94,1.106,97,1.575,140,1.416,149,0.995,158,1.575,159,1.575,163,1.784,164,1.784,209,2.498,224,1.382,240,2.967,312,3.542,341,2.541,360,3.765,361,2.083,362,3.224,367,2.222,494,2.541,537,2.967,538,3.455,539,4.137,540,2.967,542,2.967,543,4.427,545,2.967,547,2.083,548,2.083,549,2.967,550,2.083,552,2.083,554,2.083,555,2.083,556,2.083,566,2.538,567,2.538,568,2.538,569,2.538,570,2.538]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["0",{"_index":165,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["0.0.5",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["0.27.0",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["0.27.3",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":146,"title":{},"body":{"entities/Name.html":{}}}],["14.3.2",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["150*1024*1024",{"_index":135,"title":{},"body":{"controllers/HealthController.html":{}}}],["2",{"_index":564,"title":{},"body":{"overview.html":{}}}],["3",{"_index":562,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":563,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":565,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":521,"title":{},"body":{"index.html":{}}}],["add",{"_index":201,"title":{},"body":{"injectables/NamesService.html":{}}}],["add(text",{"_index":207,"title":{},"body":{"injectables/NamesService.html":{}}}],["addname",{"_index":174,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(@body",{"_index":193,"title":{},"body":{"controllers/NamesController.html":{}}}],["addname(name",{"_index":177,"title":{},"body":{"controllers/NamesController.html":{}}}],["analysis",{"_index":524,"title":{},"body":{"index.html":{}}}],["anoop",{"_index":535,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":430,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":279,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":280,"title":{},"body":{"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":281,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":282,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":99,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/User.html":{}}}],["apiproperty()@column",{"_index":235,"title":{},"body":{"entities/User.html":{}}}],["apiquery",{"_index":283,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":284,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('delete",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('get",{"_index":290,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('post",{"_index":295,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('update",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":286,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":516,"title":{},"body":{"index.html":{}}}],["applications",{"_index":461,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":466,"title":{},"body":{"index.html":{}}}],["async",{"_index":312,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["author",{"_index":534,"title":{},"body":{"index.html":{}}}],["await",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["aws\\azure\\heroku",{"_index":526,"title":{},"body":{"index.html":{}}}],["based",{"_index":502,"title":{},"body":{"index.html":{}}}],["body",{"_index":184,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["body.name",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["boot",{"_index":427,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":560,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":557,"title":{},"body":{"modules.html":{}}}],["build",{"_index":495,"title":{},"body":{"index.html":{}}}],["built",{"_index":436,"title":{},"body":{"index.html":{}}}],["came",{"_index":170,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["catch",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["cd",{"_index":525,"title":{},"body":{"index.html":{}}}],["chalk",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["character",{"_index":550,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["cheatsheet",{"_index":533,"title":{},"body":{"index.html":{}}}],["check",{"_index":109,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkdb",{"_index":110,"title":{},"body":{"controllers/HealthController.html":{}}}],["checking",{"_index":514,"title":{},"body":{"index.html":{}}}],["checkmem",{"_index":111,"title":{},"body":{"controllers/HealthController.html":{}}}],["ci",{"_index":510,"title":{},"body":{"index.html":{}}}],["ci.yml",{"_index":506,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"classes/init1644393371912.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["clone",{"_index":478,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_namesmodule",{"_index":195,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_namesmodule_providers",{"_index":196,"title":{},"body":{"modules/NamesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":306,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":307,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":425,"title":{},"body":{"index.html":{}}}],["color",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["column",{"_index":148,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["column({type",{"_index":143,"title":{},"body":{"entities/Name.html":{}}}],["complete",{"_index":426,"title":{},"body":{"index.html":{}}}],["compose",{"_index":493,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('name",{"_index":169,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["const",{"_index":217,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constraint",{"_index":552,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"controllers/HealthController.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["constructor(namesrepository",{"_index":203,"title":{},"body":{"injectables/NamesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":317,"title":{},"body":{"injectables/UsersService.html":{}}}],["contents",{"_index":433,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('health",{"_index":123,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('names",{"_index":189,"title":{},"body":{"controllers/NamesController.html":{}}}],["controller('users",{"_index":285,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copy",{"_index":484,"title":{},"body":{"index.html":{}}}],["correct",{"_index":489,"title":{},"body":{"index.html":{}}}],["count",{"_index":153,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["coverage",{"_index":346,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":224,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["create(body",{"_index":320,"title":{},"body":{"injectables/UsersService.html":{}}}],["createnamedto",{"_index":93,"title":{"classes/CreateNameDto.html":{}},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["createusers",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(body",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusersdto",{"_index":102,"title":{"classes/CreateUsersDto.html":{}},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creation",{"_index":458,"title":{},"body":{"index.html":{}}}],["database",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["db",{"_index":127,"title":{},"body":{"controllers/HealthController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":163,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["delete",{"_index":273,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apitags('delete",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":313,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":322,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteusers",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(@param('id",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(id",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":471,"title":{},"body":{"index.html":{}}}],["description",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["desktop",{"_index":476,"title":{},"body":{"index.html":{}}}],["details",{"_index":291,"title":{},"body":{"controllers/UsersController.html":{}}}],["details'})@apinotfoundresponse",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["docker",{"_index":475,"title":{},"body":{"index.html":{}}}],["docs",{"_index":131,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":347,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":540,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["down(queryrunner",{"_index":542,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["dto/create",{"_index":276,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":277,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["efortless",{"_index":465,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["entities",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"entities/Name.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/name.entity",{"_index":188,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{}}}],["entities/user.entity",{"_index":278,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":138,"title":{"entities/Name.html":{},"entities/User.html":{}},"body":{"entities/Name.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('name",{"_index":150,"title":{},"body":{"entities/Name.html":{}}}],["entity('users",{"_index":237,"title":{},"body":{"entities/User.html":{}}}],["env",{"_index":486,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":485,"title":{},"body":{"index.html":{}}}],["err",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["event",{"_index":160,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["eventemittermodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["eventemittermodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["express",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":226,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["extentia/code",{"_index":480,"title":{},"body":{"index.html":{}}}],["false",{"_index":287,"title":{},"body":{"controllers/UsersController.html":{}}}],["false})@apiokresponse({type",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["files",{"_index":492,"title":{},"body":{"index.html":{}}}],["findall",{"_index":314,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(name",{"_index":324,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":315,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(userid",{"_index":326,"title":{},"body":{"injectables/UsersService.html":{}}}],["flag",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":449,"title":{},"body":{"index.html":{}}}],["framework",{"_index":468,"title":{},"body":{"index.html":{}}}],["free",{"_index":464,"title":{},"body":{"index.html":{}}}],["fun",{"_index":453,"title":{},"body":{"index.html":{}}}],["function",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":421,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/db",{"_index":136,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/db')@healthcheck",{"_index":114,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory",{"_index":133,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory')@healthcheck",{"_index":116,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id",{"_index":181,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apitags('get",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apitags('users')@apiquery({name",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@healthcheck",{"_index":112,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(id",{"_index":210,"title":{},"body":{"injectables/NamesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getname",{"_index":175,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(@param('id",{"_index":191,"title":{},"body":{"controllers/NamesController.html":{}}}],["getname(id",{"_index":180,"title":{},"body":{"controllers/NamesController.html":{}}}],["getting",{"_index":423,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusers",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@query('name",{"_index":288,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(name",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(@param('id",{"_index":292,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersbyid(id",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":477,"title":{},"body":{"index.html":{}}}],["github",{"_index":504,"title":{},"body":{"index.html":{}}}],["goal",{"_index":455,"title":{},"body":{"index.html":{}}}],["good",{"_index":428,"title":{},"body":{"index.html":{}}}],["handle",{"_index":154,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["handle(event",{"_index":155,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["having",{"_index":452,"title":{},"body":{"index.html":{}}}],["health",{"_index":108,"title":{},"body":{"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":120,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":118,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":43,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":126,"title":{},"body":{"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":119,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com",{"_index":132,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://github.com/ajinabraham/njsscan#github",{"_index":520,"title":{},"body":{"index.html":{}}}],["https://github.com/anoopk",{"_index":479,"title":{},"body":{"index.html":{}}}],["id",{"_index":140,"title":{},"body":{"entities/Name.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["identifier",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":537,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["important",{"_index":473,"title":{},"body":{"index.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":500,"title":{},"body":{"index.html":{}}}],["includes",{"_index":511,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["information",{"_index":490,"title":{},"body":{"index.html":{}}}],["init.ts",{"_index":358,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["init.ts:12",{"_index":544,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:4",{"_index":541,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init.ts:6",{"_index":546,"title":{},"body":{"classes/init1644393371912.html":{}}}],["init1644393371912",{"_index":359,"title":{"classes/init1644393371912.html":{}},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":472,"title":{},"body":{"index.html":{}}}],["injectrepository",{"_index":213,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(name",{"_index":214,"title":{},"body":{"injectables/NamesService.html":{}}}],["injectrepository(user",{"_index":331,"title":{},"body":{"injectables/UsersService.html":{}}}],["inserted.listener",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["inserted.listener.ts",{"_index":152,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["inserted.listener.ts:6",{"_index":166,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["inserted.listener.ts:8",{"_index":157,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["install",{"_index":483,"title":{},"body":{"index.html":{}}}],["installation",{"_index":438,"title":{},"body":{"index.html":{}}}],["instrumentations",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["integration",{"_index":530,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["javascript",{"_index":446,"title":{},"body":{"index.html":{}}}],["key",{"_index":555,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["kumar",{"_index":536,"title":{},"body":{"index.html":{}}}],["language",{"_index":470,"title":{},"body":{"index.html":{}}}],["length",{"_index":145,"title":{},"body":{"entities/Name.html":{}}}],["linter",{"_index":512,"title":{},"body":{"index.html":{}}}],["list",{"_index":202,"title":{},"body":{"injectables/NamesService.html":{}}}],["listeners/name",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["listnames",{"_index":176,"title":{},"body":{"controllers/NamesController.html":{}}}],["localhost:3000",{"_index":497,"title":{},"body":{"index.html":{}}}],["localhost:3000/api",{"_index":499,"title":{},"body":{"index.html":{}}}],["localhost:3000/names",{"_index":498,"title":{},"body":{"index.html":{}}}],["main",{"_index":454,"title":{},"body":{"index.html":{}}}],["making",{"_index":456,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["memhealth",{"_index":128,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":122,"title":{},"body":{"controllers/HealthController.html":{}}}],["metadata",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["migration:run",{"_index":496,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":538,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["miscellaneous",{"_index":420,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modern",{"_index":445,"title":{},"body":{"index.html":{}}}],["modulables",{"_index":462,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["motivation",{"_index":435,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{"entities/Name.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["name.dto",{"_index":225,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["name.dto.ts",{"_index":96,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:4",{"_index":100,"title":{},"body":{"classes/CreateNameDto.html":{}}}],["name.text",{"_index":219,"title":{},"body":{"injectables/NamesService.html":{}}}],["nameinsertedlistener",{"_index":37,"title":{"injectables/NameInsertedListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"coverage.html":{},"overview.html":{}}}],["names",{"_index":173,"title":{},"body":{"controllers/NamesController.html":{}}}],["names.controller",{"_index":198,"title":{},"body":{"modules/NamesModule.html":{}}}],["names.service",{"_index":187,"title":{},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{}}}],["names/entities/name.entity",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["names/names.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["namescontroller",{"_index":171,"title":{"controllers/NamesController.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"coverage.html":{}}}],["namesmodule",{"_index":35,"title":{"modules/NamesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules.html":{},"overview.html":{}}}],["namesrepository",{"_index":206,"title":{},"body":{"injectables/NamesService.html":{}}}],["namesservice",{"_index":186,"title":{"injectables/NamesService.html":{}},"body":{"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"coverage.html":{},"overview.html":{}}}],["nestjs",{"_index":443,"title":{},"body":{"index.html":{}}}],["nestjs.git",{"_index":481,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/NameInsertedListener.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":101,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":218,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newusers",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["newusers.name",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["njsscan",{"_index":519,"title":{},"body":{"index.html":{}}}],["node",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":482,"title":{},"body":{"index.html":{}}}],["null",{"_index":549,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["number",{"_index":162,"title":{},"body":{"injectables/NameInsertedListener.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["obervability",{"_index":527,"title":{},"body":{"index.html":{}}}],["onevent",{"_index":167,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["onevent('name.inserted",{"_index":156,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["open",{"_index":501,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":529,"title":{},"body":{"index.html":{}}}],["opentelemetry/api",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/auto",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/exporter",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":159,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["ormconfig.example.json",{"_index":487,"title":{},"body":{"index.html":{}}}],["ormconfig.json",{"_index":488,"title":{},"body":{"index.html":{}}}],["otlp",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outstanding",{"_index":522,"title":{},"body":{"index.html":{}}}],["overview",{"_index":561,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":532,"title":{},"body":{"index.html":{}}}],["package",{"_index":368,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":185,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["parseint",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["parseintpipe",{"_index":271,"title":{},"body":{"controllers/UsersController.html":{}}}],["partialtype",{"_index":223,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{}}}],["partialtype(createnamedto",{"_index":227,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["partialtype(createusersdto",{"_index":231,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["password",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["penetration",{"_index":531,"title":{},"body":{"index.html":{}}}],["pg",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["pk_86c85ab0235bbe92757ce7a8f57",{"_index":553,"title":{},"body":{"classes/init1644393371912.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":570,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["plugables",{"_index":463,"title":{},"body":{"index.html":{}}}],["port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":178,"title":{},"body":{"controllers/NamesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post()@apitags('post",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["powered",{"_index":447,"title":{},"body":{"index.html":{}}}],["practices",{"_index":429,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":107,"title":{},"body":{"controllers/HealthController.html":{},"controllers/NamesController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":437,"title":{},"body":{"index.html":{}}}],["primary",{"_index":554,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["primarygeneratedcolumn",{"_index":141,"title":{},"body":{"entities/Name.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty",{"_index":233,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":125,"title":{},"body":{"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"injectables/NamesService.html":{},"injectables/UsersService.html":{}}}],["process.env.postgres_database",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_host",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_password",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_port",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgres_user",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":434,"title":{},"body":{"index.html":{}}}],["promise",{"_index":209,"title":{},"body":{"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["properties",{"_index":97,"title":{},"body":{"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"entities/User.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["proto",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":539,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["put",{"_index":272,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id')@apitags('update",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryrunner",{"_index":543,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query",{"_index":547,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["queryrunner.query(`drop",{"_index":556,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["rep",{"_index":450,"title":{},"body":{"index.html":{}}}],["repository",{"_index":204,"title":{},"body":{"injectables/NamesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["required",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{}}}],["requires",{"_index":474,"title":{},"body":{"index.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/init1644393371912.html":{},"modules.html":{},"overview.html":{},"classes/userdata1644569328662.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["run",{"_index":439,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["security",{"_index":523,"title":{},"body":{"index.html":{}}}],["serial",{"_index":548,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["server",{"_index":459,"title":{},"body":{"index.html":{}}}],["servers",{"_index":431,"title":{},"body":{"index.html":{}}}],["service",{"_index":509,"title":{},"body":{"index.html":{}}}],["setup",{"_index":503,"title":{},"body":{"index.html":{}}}],["side",{"_index":460,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"controllers/HealthController.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"modules/NamesModule.html":{},"injectables/NamesService.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateUsersDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["src/.../main.ts",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["src/health/health.controller.ts",{"_index":106,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:21",{"_index":113,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:28",{"_index":117,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:35",{"_index":115,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/listeners/name",{"_index":151,"title":{},"body":{"injectables/NameInsertedListener.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/1644393371912",{"_index":357,"title":{},"body":{"coverage.html":{},"classes/init1644393371912.html":{}}}],["src/migration/1644569328662",{"_index":360,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["src/names/dto/create",{"_index":95,"title":{},"body":{"classes/CreateNameDto.html":{},"coverage.html":{}}}],["src/names/dto/update",{"_index":222,"title":{},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts",{"_index":139,"title":{},"body":{"entities/Name.html":{},"coverage.html":{}}}],["src/names/entities/name.entity.ts:6",{"_index":142,"title":{},"body":{"entities/Name.html":{}}}],["src/names/entities/name.entity.ts:9",{"_index":147,"title":{},"body":{"entities/Name.html":{}}}],["src/names/names.controller.ts",{"_index":172,"title":{},"body":{"controllers/NamesController.html":{},"coverage.html":{}}}],["src/names/names.controller.ts:14",{"_index":182,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:19",{"_index":179,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.controller.ts:9",{"_index":183,"title":{},"body":{"controllers/NamesController.html":{}}}],["src/names/names.module.ts",{"_index":197,"title":{},"body":{"modules/NamesModule.html":{}}}],["src/names/names.service.ts",{"_index":200,"title":{},"body":{"injectables/NamesService.html":{},"coverage.html":{}}}],["src/names/names.service.ts:12",{"_index":212,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:16",{"_index":211,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:20",{"_index":208,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/names/names.service.ts:7",{"_index":205,"title":{},"body":{"injectables/NamesService.html":{}}}],["src/users/dto/create",{"_index":103,"title":{},"body":{"classes/CreateUsersDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":229,"title":{},"body":{"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":232,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":236,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":234,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":239,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:34",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":308,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":311,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":325,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":327,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":321,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":330,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":323,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":318,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssl",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":451,"title":{},"body":{"index.html":{}}}],["started",{"_index":424,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":515,"title":{},"body":{"index.html":{}}}],["stay",{"_index":441,"title":{},"body":{"index.html":{}}}],["strict",{"_index":513,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["styles",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":558,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["svg",{"_index":559,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":416,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":367,"title":{},"body":{"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["terminusmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":440,"title":{},"body":{"index.html":{}}}],["testing",{"_index":517,"title":{},"body":{"index.html":{}}}],["tests",{"_index":508,"title":{},"body":{"index.html":{}}}],["text",{"_index":98,"title":{},"body":{"classes/CreateNameDto.html":{},"entities/Name.html":{},"injectables/NamesService.html":{},"classes/init1644393371912.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.count",{"_index":168,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["this.db.pingcheck('database",{"_index":137,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.findbyid(id",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":129,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('nestjs",{"_index":130,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memhealth.checkheap(\"memory",{"_index":134,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.namesrepository.find",{"_index":215,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.findone(id",{"_index":216,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesrepository.save(name",{"_index":220,"title":{},"body":{"injectables/NamesService.html":{}}}],["this.namesservice.add(name.text",{"_index":194,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.get(id",{"_index":192,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.namesservice.list",{"_index":190,"title":{},"body":{"controllers/NamesController.html":{}}}],["this.usersrepository.find",{"_index":332,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneorfail(userid",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newusers",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(body",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(name",{"_index":289,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":293,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":294,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":442,"title":{},"body":{"index.html":{}}}],["trace",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["transformer",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":333,"title":{},"body":{"injectables/UsersService.html":{}}}],["type",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNameDto.html":{},"classes/CreateUsersDto.html":{},"entities/Name.html":{},"injectables/NameInsertedListener.html":{},"controllers/NamesController.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeorm",{"_index":149,"title":{},"body":{"entities/Name.html":{},"injectables/NamesService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["typeormhealthindicator",{"_index":121,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([name",{"_index":199,"title":{},"body":{"modules/NamesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":310,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":448,"title":{},"body":{"index.html":{}}}],["ui",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["uncomplicaded",{"_index":457,"title":{},"body":{"index.html":{}}}],["unit",{"_index":507,"title":{},"body":{"index.html":{}}}],["up",{"_index":494,"title":{},"body":{"index.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["up(queryrunner",{"_index":545,"title":{},"body":{"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["update",{"_index":316,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":329,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatenamedto",{"_index":221,"title":{"classes/UpdateNameDto.html":{}},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["updateusers",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusers(id",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateusersdto",{"_index":228,"title":{"classes/UpdateUsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":444,"title":{},"body":{"index.html":{}}}],["used",{"_index":469,"title":{},"body":{"index.html":{}}}],["user",{"_index":59,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":230,"title":{},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":104,"title":{},"body":{"classes/CreateUsersDto.html":{},"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":105,"title":{},"body":{"classes/CreateUsersDto.html":{}}}],["user.name",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdata.ts",{"_index":361,"title":{},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userdata.ts:12",{"_index":567,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:4",{"_index":566,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata.ts:6",{"_index":568,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["userdata1644569328662",{"_index":362,"title":{"classes/userdata1644569328662.html":{}},"body":{"coverage.html":{},"classes/userdata1644569328662.html":{}}}],["userid",{"_index":328,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{},"classes/userdata1644569328662.html":{}}}],["users')@apicreatedresponse({type",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["users')@apiokresponse({type",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":309,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":275,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":238,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":319,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":274,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@apibadrequestresponse",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":518,"title":{},"body":{"index.html":{}}}],["value",{"_index":164,"title":{},"body":{"injectables/NameInsertedListener.html":{},"classes/init1644393371912.html":{},"classes/userdata1644569328662.html":{}}}],["varchar",{"_index":144,"title":{},"body":{"entities/Name.html":{}}}],["varying",{"_index":569,"title":{},"body":{"classes/userdata1644569328662.html":{}}}],["varying(12",{"_index":551,"title":{},"body":{"classes/init1644393371912.html":{}}}],["via",{"_index":528,"title":{},"body":{"index.html":{}}}],["void",{"_index":161,"title":{},"body":{"injectables/NameInsertedListener.html":{}}}],["web",{"_index":467,"title":{},"body":{"index.html":{}}}],["wired",{"_index":432,"title":{},"body":{"index.html":{}}}],["within",{"_index":491,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":505,"title":{},"body":{"index.html":{}}}],["world",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/NamesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            NameInsertedListener\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NamesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { NamesModule } from './names/names.module';\nimport { NameInsertedListener } from './listeners/name-inserted.listener';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { Name } from './names/entities/name.entity';\nimport { User } from './users/entities/user.entity';\nimport { UsersModule } from './users/users.module';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health/health.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [\n    NamesModule,\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n\n      host: process.env.POSTGRES_HOST,\n      port: parseInt(\n        process.env.POSTGRES_PORT ? process.env.POSTGRES_PORT : '3000',\n      ),\n      username: process.env.POSTGRES_USER,\n      password: process.env.POSTGRES_PASSWORD,\n      database: process.env.POSTGRES_DATABASE,\n      entities: [Name, User],\n      //ssl: true,\n    }),\n    HttpModule,\n    TerminusModule,\n    UsersModule,\n  ],\n  controllers: [AppController, HealthController],\n  providers: [AppService, NameInsertedListener],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNameDto.html":{"url":"classes/CreateNameDto.html","title":"class - CreateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/create-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/dto/create-name.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateNameDto {\n  @ApiProperty()\n  text: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersDto.html":{"url":"classes/CreateUsersDto.html","title":"class - CreateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUsersDto {\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                checkDb\n                            \n                            \n                                checkMem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkDb\n                        \n                    \n                \n            \n            \n                \ncheckDb()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/db')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMem\n                        \n                    \n                \n            \n            \n                \ncheckMem()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/memory')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  TypeOrmHealthIndicator,\n  MemoryHealthIndicator\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: TypeOrmHealthIndicator,\n    private memHealth: MemoryHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n  @Get('/memory')\n  @HealthCheck()\n  checkMem() {\n    return this.health.check([\n      () => this.memHealth.checkHeap(\"memory\", 150*1024*1024),\n    ]);\n  }\n  @Get('/db')\n  @HealthCheck()\n  checkDb() {\n    return this.health.check([\n      () => this.db.pingCheck('database'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Name.html":{"url":"entities/Name.html","title":"entity - Name","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/entities/name.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 12})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/names/entities/name.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('name')\nexport class Name {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column({ type: 'varchar', length: 12 })\n  text!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameInsertedListener.html":{"url":"injectables/NameInsertedListener.html","title":"injectable - NameInsertedListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NameInsertedListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listeners/name-inserted.listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                count\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('name.inserted')\n                \n            \n\n            \n                \n                    Defined in src/listeners/name-inserted.listener.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/listeners/name-inserted.listener.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class NameInsertedListener {\n  private count = 0;\n  @OnEvent('name.inserted')\n  handle(event: string) {\n    this.count++;\n    console.log('Name came in ', this.count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NamesController.html":{"url":"controllers/NamesController.html","title":"controller - NamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                names\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addName\n                            \n                            \n                                getName\n                            \n                            \n                                listNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addName\n                        \n                    \n                \n            \n            \n                \naddName(name: Name)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Name\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listNames\n                        \n                    \n                \n            \n            \n                \nlistNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/names/names.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { NamesService } from './names.service';\nimport { Name } from './entities/name.entity';\n\n@Controller('names')\nexport class NamesController {\n  constructor(private namesService: NamesService) {}\n  @Get()\n  listNames() {\n    return this.namesService.list();\n  }\n\n  @Get(':id')\n  getName(@Param('id') id: string) {\n    return this.namesService.get(id);\n  }\n\n  @Post()\n  addName(@Body() name: Name) {\n    return this.namesService.add(name.text);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NamesModule.html":{"url":"modules/NamesModule.html","title":"module - NamesModule","body":"\n                   \n\n\n\n\n    Modules\n    NamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\n\nNamesService\n\nNamesService\n\n\n\nNamesModule\n\nNamesModule\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/names/names.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NamesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NamesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NamesService } from './names.service';\nimport { NamesController } from './names.controller';\nimport { Name } from './entities/name.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Name])],\n  controllers: [NamesController],\n  providers: [NamesService, Name, EventEmitterModule],\n})\nexport class NamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NamesService.html":{"url":"injectables/NamesService.html","title":"injectable - NamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/names.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/names/names.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist()\n                \n            \n\n\n            \n                \n                    Defined in src/names/names.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Name } from './entities/name.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class NamesService {\n  constructor(\n    @InjectRepository(Name) private namesRepository: Repository,\n  ) {}\n\n  list(): Promise {\n    return this.namesRepository.find();\n  }\n\n  get(id: string): Promise {\n    return this.namesRepository.findOne(id);\n  }\n\n  add(text: string): Promise {\n    const name = new Name();\n    name.text = text;\n    return this.namesRepository.save(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNameDto.html":{"url":"classes/UpdateNameDto.html","title":"class - UpdateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/names/dto/update-name.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNameDto } from './create-name.dto';\n\nexport class UpdateNameDto extends PartialType(CreateNameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsersDto.html":{"url":"classes/UpdateUsersDto.html","title":"class - UpdateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUsersDto } from './create-user.dto';\n\nexport class UpdateUsersDto extends PartialType(CreateUsersDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\nimport { ApiProperty } from '@nestjs/swagger';\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  @Column()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUsers\n                            \n                            \n                                deleteUsers\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersbyId\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUsers\n                        \n                    \n                \n            \n            \n                \ncreateUsers(body: CreateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiTags('Post Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \ndeleteUsers(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags('Delete Users')@ApiCreatedResponse({type: User})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiTags('Users')@ApiQuery({name: 'name', required: false})@ApiOkResponse({type: User, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersbyId\n                        \n                    \n                \n            \n            \n                \ngetUsersbyId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiTags('Get Users')@ApiOkResponse({type: User, description: 'Get user details'})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers(id: number, body: UpdateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiTags('Update Users')@ApiCreatedResponse({type: User})@ApiBadRequestResponse()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Body,\n  Query,\n  NotFoundException,\n  ParseIntPipe,\n  Put,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  @ApiTags('Users')\n  @ApiQuery({ name: 'name', required: false })\n  @ApiOkResponse({ type: User, isArray: true })\n  getUsers(@Query('name') name: string): Promise {\n    return this.usersService.findall(name);\n  }\n\n  @Get(':id')\n  @ApiTags('Get Users')\n  @ApiOkResponse({ type: User, description: 'Get user details' })\n  @ApiNotFoundResponse()\n  getUsersbyId(@Param('id', ParseIntPipe) id: number): Promise {\n    const user = this.usersService.findbyid(id);\n    if (!user) {\n      throw new NotFoundException();\n    }\n    return user;\n  }\n  @Post()\n  @ApiTags('Post Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  createUsers(@Body() body: CreateUsersDto): Promise {\n    return this.usersService.create(body);\n  }\n  @Put(':id')\n  @ApiTags('Update Users')\n  @ApiCreatedResponse({ type: User })\n  @ApiBadRequestResponse()\n  updateUsers(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateUsersDto,\n  ): Promise {\n    return this.usersService.update(id, body);\n  }\n  @Delete(':id')\n  @ApiTags('Delete Users')\n  @ApiCreatedResponse({ type: User })\n  deleteUsers(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.usersService.deleteuser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, User, EventEmitterModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                deleteuser\n                            \n                            \n                                findall\n                            \n                            \n                                    Async\n                                findbyid\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteuser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findall\n                        \n                    \n                \n            \n            \n                \nfindall(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findbyid\n                        \n                    \n                \n            \n            \n                \n                    \n                    findbyid(userID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, body: UpdateUsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsersDto } from './dto/create-user.dto';\nimport { UpdateUsersDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private usersRepository: Repository,\n  ) {}\n\n  findall(name: string): Promise {\n    if (name) {\n      return this.usersRepository.find({\n        where: [{ name: name }],\n      });\n    } else {\n      return this.usersRepository.find();\n    }\n  }\n\n  async findbyid(userID: number): Promise {\n    try {\n      const user = this.usersRepository.findOneOrFail(userID);\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  create(body: CreateUsersDto): Promise {\n    const newUsers = new User();\n    newUsers.name = body.name;\n    return this.usersRepository.save(newUsers);\n  }\n\n  async update(id: number, body: UpdateUsersDto): Promise {\n    const user = await this.findbyid(id);\n    user.name = body.name || '';\n    return this.usersRepository.save(user);\n  }\n  async deleteuser(id: number): Promise {\n    const user = await this.findbyid(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/listeners/name-inserted.listener.ts\n            \n            injectable\n            NameInsertedListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1644393371912-init.ts\n            \n            class\n            init1644393371912\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1644569328662-userdata.ts\n            \n            class\n            userdata1644569328662\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/dto/create-name.dto.ts\n            \n            class\n            CreateNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/names/dto/update-name.dto.ts\n            \n            class\n            UpdateNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/entities/name.entity.ts\n            \n            entity\n            Name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/names/names.controller.ts\n            \n            controller\n            NamesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/names/names.service.ts\n            \n            injectable\n            NamesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.0.5\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/event-emitter : ^1.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/terminus : ^8.0.4\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @opentelemetry/api : ^1.0.4\n        \n            @opentelemetry/auto-instrumentations-node : ^0.27.3\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.27.0\n        \n            @opentelemetry/sdk-node : ^0.27.0\n        \n            ansi-styles : ^6.1.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.5.1\n        \n            dotenv : ^14.3.2\n        \n            has-flag : ^5.0.1\n        \n            helmet : ^5.0.2\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            supports-color : ^9.2.1\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Code Complete\n\n  \n    A boot repository that has some good practices for API servers wired in.\n    \n  \n\n\n\nTable of Contents\n\nAbout the Project\nMotivation\nBuilt With\n\n\nGetting Started\nPrerequisites\nInstallation\nRun and Test\n\n\nStay in touch\n\nAbout the project\nA boot repository that has some good practices for API servers wired in. Built on nestjs and use modern Javascript powered by \nTypescript. \nTo use, fork into your rep and start having fun.\nMotivation\nMain goal is making uncomplicaded creation of server-side applications, modulables, plugables, free and efortless \narchitecture.\nBuilt With\n\nnestjs - The web framework used\nTypescript - Main Language\ntypeorm - Used for dependency Injection\n\nGetting Started\nPrerequisites\nImportant! Requires Docker Desktop.\nInstallation\ngit clone https://github.com/anoopk-extentia/code-complete-nestjs.git\nnpm install\nCopy .env.example to .env and ormconfig.example.json to ormconfig.json\nCorrect the information within these files\ndocker-compose up --build\nnpm run typeorm migration:run\nRun and Test\nget localhost:3000\nget localhost:3000/names\npost localhost:3000/names\nAPI Documentation\nget localhost:3000/api\nPractices Included\nOpen API (Swagger)\nDocker based setup\nGithub Workflow (ci.yml) \nUnit Tests (Controller and Service)\nCI Includes (linter, unit tests, test coverage)\nStrict Type Checking\nstatic application testing using [njsscan] https://github.com/ajinabraham/njsscan#github-action\nPractices Outstanding\nCI - Security Analysis\nCD - AWS\\Azure\\Heroku\nObervability via OpenTelemetry\nIntegration tests\nPenetration tests\nOWASP Cheatsheet\nStay in Touch\n\nAuthor - Anoop Kumar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/init1644393371912.html":{"url":"classes/init1644393371912.html","title":"class - init1644393371912","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  init1644393371912\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644393371912-init.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'init1644393371912'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644393371912-init.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644393371912-init.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class init1644393371912 implements MigrationInterface {\n  name = 'init1644393371912';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"name\" (\"id\" SERIAL NOT NULL, \"text\" character varying(12) NOT NULL, CONSTRAINT \"PK_86c85ab0235bbe92757ce7a8f57\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NamesModule\n\n\n\ncluster_NamesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nNamesModule\n\nNamesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nNamesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNameInsertedListener\n\nNameInsertedListener\n\nAppModule -->\n\nNameInsertedListener->AppModule\n\n\n\n\n\nNamesService\n\nNamesService\n\nNamesModule -->\n\nNamesService->NamesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userdata1644569328662.html":{"url":"classes/userdata1644569328662.html","title":"class - userdata1644569328662","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userdata1644569328662\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1644569328662-userdata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userdata1644569328662'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1644569328662-userdata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1644569328662-userdata.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class userdata1644569328662 implements MigrationInterface {\n  name = 'userdata1644569328662';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
